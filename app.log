
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
[32m :: Spring Boot :: [39m              [2m (v2.7.3)[0;39m

[2m2025-05-23 17:04:29.552[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.shipmodel.Application               [0;39m [2m:[0;39m Starting Application v0.0.1-SNAPSHOT using Java 24.0.1 on AjaxdeMacBook-Air.local with PID 46835 (/Users/ajax/Desktop/YJS/5_22_test_blender2.1/target/texture-mapping-0.0.1-SNAPSHOT.jar started by ajax in /Users/ajax/Desktop/YJS/5_22_test_blender2.1)
[2m2025-05-23 17:04:29.553[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.shipmodel.Application               [0;39m [2m:[0;39m Running with Spring Boot v2.7.3, Spring v5.3.22
[2m2025-05-23 17:04:29.553[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.shipmodel.Application               [0;39m [2m:[0;39m No active profile set, falling back to 1 default profile: "default"
[2m2025-05-23 17:04:29.554[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.boot.SpringApplication              [0;39m [2m:[0;39m Loading source class com.shipmodel.Application
[2m2025-05-23 17:04:29.593[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36mConfigServletWebServerApplicationContext[0;39m [2m:[0;39m Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@fcd6521
WARNING: A restricted method in java.lang.System has been called
WARNING: java.lang.System::load has been called by org.apache.tomcat.jni.Library in an unnamed module (jar:file:/Users/ajax/Desktop/YJS/5_22_test_blender2.1/target/texture-mapping-0.0.1-SNAPSHOT.jar!/BOOT-INF/lib/tomcat-embed-core-9.0.65.jar!/)
WARNING: Use --enable-native-access=ALL-UNNAMED to avoid a warning for callers in this module
WARNING: Restricted methods will be blocked in a future release unless native access is enabled

[2m2025-05-23 17:04:30.301[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36m.s.b.w.e.t.TomcatServletWebServerFactory[0;39m [2m:[0;39m Code archive: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/target/texture-mapping-0.0.1-SNAPSHOT.jar
[2m2025-05-23 17:04:30.301[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36m.s.b.w.e.t.TomcatServletWebServerFactory[0;39m [2m:[0;39m Code archive: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/target/texture-mapping-0.0.1-SNAPSHOT.jar
[2m2025-05-23 17:04:30.301[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36m.s.b.w.e.t.TomcatServletWebServerFactory[0;39m [2m:[0;39m None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
[2m2025-05-23 17:04:30.321[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m [2m:[0;39m Tomcat initialized with port(s): 8080 (http)
[2m2025-05-23 17:04:30.330[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.apache.catalina.core.StandardService  [0;39m [2m:[0;39m Starting service [Tomcat]
[2m2025-05-23 17:04:30.330[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.apache.catalina.core.StandardEngine [0;39m [2m:[0;39m Starting Servlet engine: [Apache Tomcat/9.0.65]
[2m2025-05-23 17:04:30.396[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.a.c.c.C.[Tomcat].[localhost].[/]      [0;39m [2m:[0;39m Initializing Spring embedded WebApplicationContext
[2m2025-05-23 17:04:30.396[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36mw.s.c.ServletWebServerApplicationContext[0;39m [2m:[0;39m Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
[2m2025-05-23 17:04:30.396[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36mw.s.c.ServletWebServerApplicationContext[0;39m [2m:[0;39m Root WebApplicationContext: initialization completed in 803 ms
[2m2025-05-23 17:04:30.405[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.b.w.s.ServletContextInitializerBeans[0;39m [2m:[0;39m Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
[2m2025-05-23 17:04:30.405[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.b.w.s.ServletContextInitializerBeans[0;39m [2m:[0;39m Mapping servlets: dispatcherServlet urls=[/]
[2m2025-05-23 17:04:30.421[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.b.w.s.f.OrderedRequestContextFilter [0;39m [2m:[0;39m Filter 'requestContextFilter' configured for use
[2m2025-05-23 17:04:30.421[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36ms.b.w.s.f.OrderedCharacterEncodingFilter[0;39m [2m:[0;39m Filter 'characterEncodingFilter' configured for use
[2m2025-05-23 17:04:30.421[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.b.w.s.f.OrderedFormContentFilter    [0;39m [2m:[0;39m Filter 'formContentFilter' configured for use
[2m2025-05-23 17:04:30.587[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.b.a.AutoConfigurationPackages       [0;39m [2m:[0;39m @EnableAutoConfiguration was declared on a class in the package 'com.shipmodel'. Automatic @Repository and @Entity scanning is enabled.
[2m2025-05-23 17:04:30.609[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36ms.w.s.m.m.a.RequestMappingHandlerAdapter[0;39m [2m:[0;39m ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[2m2025-05-23 17:04:30.732[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36ms.w.s.m.m.a.RequestMappingHandlerMapping[0;39m [2m:[0;39m 9 mappings in 'requestMappingHandlerMapping'
资源映射配置：/models/** -> /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output
[2m2025-05-23 17:04:30.743[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Patterns [/webjars/**, /models/**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
[2m2025-05-23 17:04:30.748[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36m.m.m.a.ExceptionHandlerExceptionResolver[0;39m [2m:[0;39m ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
[2m2025-05-23 17:04:30.817[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m [2m:[0;39m Tomcat started on port(s): 8080 (http) with context path ''
[2m2025-05-23 17:04:30.827[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36mConditionEvaluationReportLoggingListener[0;39m [2m:[0;39m 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration matched:
      - @ConditionalOnMissingClass did not find unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringDocConfigProperties matched:
      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)

   SpringDocConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)

   SpringDocConfiguration#fileSupportConverter matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.FileSupportConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#openAPIBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.OpenAPIService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#operationBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.OperationService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#parameterBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.GenericParameterService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#polymorphicModelConverter matched:
      - @ConditionalOnProperty (springdoc.model-converters.polymorphic-converter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.PolymorphicModelConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#requestBodyBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.RequestBodyService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#responseSupportConverter matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.ResponseSupportConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#schemaPropertyDeprecatingConverter matched:
      - @ConditionalOnProperty (springdoc.model-converters.deprecating-converter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.SchemaPropertyDeprecatingConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#securityParser matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.SecurityService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#springDocCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.customizers.SpringDocCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#springDocObjectMapperProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.ObjectMapperProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#springDocProviders matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.SpringDocProviders; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration.SpringDocSpringDataWebPropertiesProvider matched:
      - @ConditionalOnClass found required class 'org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties' (OnClassCondition)

   SpringDocConfiguration.SpringDocSpringDataWebPropertiesProvider#springDataWebPropertiesProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringDataWebPropertiesProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration.WebConversionServiceConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.boot.autoconfigure.web.format.WebConversionService' (OnClassCondition)

   SpringDocUIConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnExpression (#{${springdoc.api-docs.enabled:true}}) resulted in true (OnExpressionCondition)
      - @ConditionalOnBean (types: org.springdoc.core.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.SpringDocConfiguration' (OnBeanCondition)

   SpringDocWebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.SpringDocConfiguration' (OnBeanCondition)

   SpringDocWebMvcConfiguration#openApiResource matched:
      - @ConditionalOnProperty (springdoc.use-management-port=false) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.api.OpenApiWebMvcResource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocWebMvcConfiguration#requestBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.core.RequestService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocWebMvcConfiguration#responseBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.GenericResponseService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocWebMvcConfiguration#springWebProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringWebProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocWebMvcConfiguration.SpringDocWebMvcRouterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.function.RouterFunction' (OnClassCondition)

   SpringDocWebMvcConfiguration.SpringDocWebMvcRouterConfiguration#routerFunctionProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.core.RouterFunctionWebMvcProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SwaggerConfig matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (springdoc.swagger-ui.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.SpringDocConfiguration' (OnBeanCondition)

   SwaggerConfig#indexPageTransformer matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerIndexTransformer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerConfig#swaggerConfigResource matched:
      - @ConditionalOnProperty (springdoc.use-management-port=false) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerConfigResource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerConfig#swaggerResourceResolver matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerResourceResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerConfig#swaggerWebMvcConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerWebMvcConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerConfig#swaggerWelcome matched:
      - @ConditionalOnProperty (springdoc.use-management-port=false) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerUiConfigParameters matched:
      - @ConditionalOnProperty (springdoc.swagger-ui.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.SpringDocConfiguration' (OnBeanCondition)

   SwaggerUiConfigProperties matched:
      - @ConditionalOnProperty (springdoc.swagger-ui.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.SpringDocConfiguration' (OnBeanCondition)

   SwaggerUiOAuthProperties matched:
      - @ConditionalOnProperty (springdoc.swagger-ui.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.SpringDocConfiguration' (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   DataSourceInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JdbcTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MultipleOpenApiSupportConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on MultipleOpenApiSupportCondition.OnActuatorDifferentPort @ConditionalOnProperty (springdoc.show-actuator) found different value in property 'springdoc.show-actuator'; NestedCondition on MultipleOpenApiSupportCondition.OnMultipleOpenApiSupportCondition AnyNestedCondition 0 matched 2 did not; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupConfigProperty @ConditionalOnProperty (springdoc.group-configs[0].group) did not find property 'springdoc.group-configs[0].group'; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupedOpenApiBean @ConditionalOnBean (types: org.springdoc.core.GroupedOpenApi; SearchStrategy: all) did not find any beans of type org.springdoc.core.GroupedOpenApi (MultipleOpenApiSupportCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)

   MultipleOpenApiSupportConfiguration.SpringDocWebMvcActuatorDifferentConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping' (OnClassCondition)
         - Ancestor org.springdoc.webmvc.core.MultipleOpenApiSupportConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringDataWebAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.web.PageableHandlerMethodArgumentResolver' (OnClassCondition)

   SpringDocConfiguration#propertiesResolverForSchema:
      Did not match:
         - @ConditionalOnProperty (springdoc.api-docs.resolve-schema-properties) did not find property 'springdoc.api-docs.resolve-schema-properties' (OnPropertyCondition)

   SpringDocConfiguration#propertyCustomizingConverter:
      Did not match:
         - @ConditionalOnBean (types: org.springdoc.core.customizers.PropertyCustomizer; SearchStrategy: all) did not find any beans of type org.springdoc.core.customizers.PropertyCustomizer (OnBeanCondition)

   SpringDocConfiguration#springdocBeanFactoryPostProcessor:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on CacheOrGroupedOpenApiCondition.OnCacheDisabled found non-matching nested conditions @ConditionalOnProperty (springdoc.cache.disabled) did not find property 'springdoc.cache.disabled'; NestedCondition on CacheOrGroupedOpenApiCondition.OnMultipleOpenApiSupportCondition AnyNestedCondition 0 matched 2 did not; NestedCondition on MultipleOpenApiSupportCondition.OnActuatorDifferentPort @ConditionalOnProperty (springdoc.show-actuator) found different value in property 'springdoc.show-actuator'; NestedCondition on MultipleOpenApiSupportCondition.OnMultipleOpenApiSupportCondition AnyNestedCondition 0 matched 2 did not; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupConfigProperty @ConditionalOnProperty (springdoc.group-configs[0].group) did not find property 'springdoc.group-configs[0].group'; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupedOpenApiBean @ConditionalOnBean (types: org.springdoc.core.GroupedOpenApi; SearchStrategy: all) did not find any beans of type org.springdoc.core.GroupedOpenApi (CacheOrGroupedOpenApiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.boot.context.properties.bind.BindResult' (OnClassCondition)

   SpringDocConfiguration#springdocBeanFactoryPostProcessor2:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.springframework.boot.context.properties.bind.BindResult' (OnClassCondition)

   SpringDocConfiguration.SpringDocActuatorConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' (OnClassCondition)

   SpringDocConfiguration.SpringDocFunctionCatalogConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.cloud.function.web.function.FunctionEndpointInitializer' (OnClassCondition)

   SpringDocConfiguration.SpringDocPageableConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.domain.Pageable' (OnClassCondition)

   SpringDocConfiguration.SpringDocRepositoryRestConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.core.config.RepositoryRestConfiguration' (OnClassCondition)

   SpringDocConfiguration.SpringDocSortConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.domain.Sort' (OnClassCondition)

   SpringDocConfiguration.SpringDocWebFluxSupportConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   SpringDocWebMvcConfiguration.SpringDocWebMvcActuatorConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping' (OnClassCondition)

   SwaggerConfig#springWebProvider:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringWebProvider; SearchStrategy: all) found beans of type 'org.springdoc.core.providers.SpringWebProvider' springWebProvider (OnBeanCondition)

   SwaggerConfig#swaggerUiConfigParameters:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springdoc.core.SwaggerUiConfigParameters; SearchStrategy: all) found beans of type 'org.springdoc.core.SwaggerUiConfigParameters' org.springdoc.core.SwaggerUiConfigParameters (OnBeanCondition)

   SwaggerConfig#swaggerUiHome:
      Did not match:
         - @ConditionalOnProperty (springdoc.swagger-ui.use-root-path=true) did not find property 'springdoc.swagger-ui.use-root-path' (OnPropertyCondition)

   SwaggerConfig.SwaggerActuatorWelcomeConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnResource did not find resource 'classpath:META-INF/services/javax.validation.spi.ValidationProvider' (OnResourceCondition)
      Matched:
         - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



[2m2025-05-23 17:04:30.830[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.shipmodel.Application               [0;39m [2m:[0;39m Started Application in 1.57 seconds (JVM running for 1.894)
[2m2025-05-23 17:04:30.831[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.b.a.ApplicationAvailabilityBean     [0;39m [2m:[0;39m Application availability state LivenessState changed to CORRECT
[2m2025-05-23 17:04:30.832[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.b.a.ApplicationAvailabilityBean     [0;39m [2m:[0;39m Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
[2m2025-05-23 17:04:44.226[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mo.a.c.c.C.[Tomcat].[localhost].[/]      [0;39m [2m:[0;39m Initializing Spring DispatcherServlet 'dispatcherServlet'
[2m2025-05-23 17:04:44.226[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Initializing Servlet 'dispatcherServlet'
[2m2025-05-23 17:04:44.226[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Detected StandardServletMultipartResolver
[2m2025-05-23 17:04:44.226[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Detected AcceptHeaderLocaleResolver
[2m2025-05-23 17:04:44.227[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Detected FixedThemeResolver
[2m2025-05-23 17:04:44.228[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@294f4685
[2m2025-05-23 17:04:44.228[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Detected org.springframework.web.servlet.support.SessionFlashMapManager@6cdcac65
[2m2025-05-23 17:04:44.228[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[2m2025-05-23 17:04:44.228[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed initialization in 2 ms
[2m2025-05-23 17:04:44.239[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m GET "/swagger-ui/index.html", parameters={}
[2m2025-05-23 17:04:44.252[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[2m2025-05-23 17:04:44.288[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:04:44.350[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
[2m2025-05-23 17:04:44.359[0;39m [33m WARN[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mo.s.web.servlet.PageNotFound            [0;39m [2m:[0;39m No mapping for GET /.well-known/appspecific/com.chrome.devtools.json
[2m2025-05-23 17:04:44.360[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 404 NOT_FOUND
[2m2025-05-23 17:04:44.366[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m "ERROR" dispatch for GET "/error", parameters={}
[2m2025-05-23 17:04:44.370[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36ms.w.s.m.m.a.RequestMappingHandlerMapping[0;39m [2m:[0;39m Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
[2m2025-05-23 17:04:44.412[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mo.s.w.s.m.m.a.HttpEntityMethodProcessor [0;39m [2m:[0;39m Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
[2m2025-05-23 17:04:44.415[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mo.s.w.s.m.m.a.HttpEntityMethodProcessor [0;39m [2m:[0;39m Writing [{timestamp=Fri May 23 17:04:44 CST 2025, status=404, error=Not Found, path=/.well-known/appspecific/ (truncated)...]
[2m2025-05-23 17:04:44.576[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Exiting from "ERROR" dispatch, status 404
[2m2025-05-23 17:04:44.769[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-3][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m GET "/swagger-ui/swagger-initializer.js", parameters={}
[2m2025-05-23 17:04:44.770[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-3][0;39m [36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[2m2025-05-23 17:04:44.781[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-3][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:04:46.279[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m GET "/api-docs/swagger-config", parameters={}
[2m2025-05-23 17:04:46.282[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36ms.w.s.m.m.a.RequestMappingHandlerMapping[0;39m [2m:[0;39m Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
[2m2025-05-23 17:04:46.289[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mm.m.a.RequestResponseBodyMethodProcessor[0;39m [2m:[0;39m Using 'application/json', given [*/*] and supported [application/json]
[2m2025-05-23 17:04:46.291[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mm.m.a.RequestResponseBodyMethodProcessor[0;39m [2m:[0;39m Writing [{configUrl=/api-docs/swagger-config, oauth2RedirectUrl=http://localhost:8080/swagger-ui/oauth2-redir (truncated)...]
[2m2025-05-23 17:04:46.293[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:04:46.348[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m GET "/api-docs", parameters={}
[2m2025-05-23 17:04:46.359[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36ms.w.s.m.m.a.RequestMappingHandlerMapping[0;39m [2m:[0;39m Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
[2m2025-05-23 17:04:46.639[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mo.springdoc.api.AbstractOpenApiResource [0;39m [2m:[0;39m Init duration for springdoc-openapi is: 268 ms
[2m2025-05-23 17:04:46.663[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mm.m.a.RequestResponseBodyMethodProcessor[0;39m [2m:[0;39m Using 'application/json', given [application/json, */*] and supported [application/json]
[2m2025-05-23 17:04:46.670[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mm.m.a.RequestResponseBodyMethodProcessor[0;39m [2m:[0;39m Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 48, 46, 49, 34, 44, 34, 105, 110, 10 (truncated)...]
[2m2025-05-23 17:04:46.673[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:04:52.467[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m POST "/api/ship/texture-mapping", parameters={}
[2m2025-05-23 17:04:52.468[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36ms.w.s.m.m.a.RequestMappingHandlerMapping[0;39m [2m:[0;39m Mapped to com.shipmodel.controller.ShipModelController#processTextureMapping(TextureMappingRequest)
[2m2025-05-23 17:04:52.484[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mm.m.a.RequestResponseBodyMethodProcessor[0;39m [2m:[0;39m Read "application/json;charset=UTF-8" to [TextureMappingRequest{shipModel='/model/02_chuizhi.ply', textureDate=[/texture/20250522/top.jpg, /te (truncated)...]
[2m2025-05-23 17:04:52.487[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 接收到纹理贴图请求: TextureMappingRequest{shipModel='/model/02_chuizhi.ply', textureDate=[/texture/20250522/top.jpg, /texture/20250522/side.jpg]}
[2m2025-05-23 17:04:52.487[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 处理纹理贴图请求: 模型路径=/model/02_chuizhi.ply, 纹理路径数量=2
[2m2025-05-23 17:04:52.487[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 使用完整路径执行纹理贴图: 模型=/model/02_chuizhi.ply, 纹理=[/texture/20250522/top.jpg, /texture/20250522/side.jpg]
[2m2025-05-23 17:04:52.488[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 从路径提取的信息: 模型名称=02_chuizhi, 纹理日期=20250522
[2m2025-05-23 17:04:52.491[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 将生成的输出文件: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_170452.glb
[2m2025-05-23 17:04:52.492[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 处理的文件路径:
[2m2025-05-23 17:04:52.492[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 模型路径: http://192.168.1.110:8099/model/02_chuizhi.ply
[2m2025-05-23 17:04:52.492[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 顶视图路径: http://192.168.1.110:8099/texture/20250522/top.jpg
[2m2025-05-23 17:04:52.492[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 侧视图路径: http://192.168.1.110:8099/texture/20250522/side.jpg
[2m2025-05-23 17:04:52.492[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 执行Blender命令: [/Applications/Blender.app/Contents/MacOS/Blender, --background, --python, /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T//blender_script_fe02b51a-4470-4dbe-a9a6-ad9829690df0.py, --, http://192.168.1.110:8099/model/02_chuizhi.ply, http://192.168.1.110:8099/texture/20250522/top.jpg, http://192.168.1.110:8099/texture/20250522/side.jpg, /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_170452.glb]
[2m2025-05-23 17:04:53.196[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始执行无界面Blender脚本...
[2m2025-05-23 17:04:53.196[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用模型路径: http://192.168.1.110:8099/model/02_chuizhi.ply
[2m2025-05-23 17:04:53.196[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用顶视图纹理: http://192.168.1.110:8099/texture/20250522/top.jpg
[2m2025-05-23 17:04:53.196[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用侧视图纹理: http://192.168.1.110:8099/texture/20250522/side.jpg
[2m2025-05-23 17:04:53.196[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 输出路径: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_170452.glb
[2m2025-05-23 17:04:53.196[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/model/02_chuizhi.ply 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:04:53.241[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:04:53.241[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在清除默认对象...
[2m2025-05-23 17:04:53.242[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在导入PLY文件: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:04:53.312[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已保存模型 02_chuizhi 的原始变换属性
[2m2025-05-23 17:04:53.312[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 清理临时模型文件: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:04:53.313[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建材质: Material_Top
[2m2025-05-23 17:04:53.313[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建材质: Material_Side
[2m2025-05-23 17:04:53.314[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始预先创建所有相机...
[2m2025-05-23 17:04:53.314[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建相机: Camera_Top
[2m2025-05-23 17:04:53.314[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建相机: Camera_Side
[2m2025-05-23 17:04:53.315[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始处理相机配置 1/2: Camera_Top
[2m2025-05-23 17:04:53.315[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已将模型旋转到相机 Camera_Top 对应的角度
[2m2025-05-23 17:04:53.708[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已为相机 Camera_Top 选择了 27604 个面
[2m2025-05-23 17:04:53.710[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 基于透视相机 Camera_Top 参数计算UV投影
[2m2025-05-23 17:04:53.775[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机类型: 透视
[2m2025-05-23 17:04:53.775[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机位置: <Vector (0.0000, 0.0000, 16.0000)>
[2m2025-05-23 17:04:53.775[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 焦距: 50.0mm, 视野: 39.6°, 宽高比: 1.50
[2m2025-05-23 17:04:53.899[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] UV投影计算完成
[2m2025-05-23 17:04:53.900[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/texture/20250522/top.jpg 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/top.jpg
[2m2025-05-23 17:04:53.908[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/top.jpg
[2m2025-05-23 17:04:53.908[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已应用纹理 http://192.168.1.110:8099/texture/20250522/top.jpg 到材质 Material_Top
[2m2025-05-23 17:04:53.940[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已恢复模型到原始角度，准备处理下一个相机
[2m2025-05-23 17:04:53.940[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始处理相机配置 2/2: Camera_Side
[2m2025-05-23 17:04:53.940[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已将模型旋转到相机 Camera_Side 对应的角度
[2m2025-05-23 17:04:54.349[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已为相机 Camera_Side 选择了 34405 个面
[2m2025-05-23 17:04:54.352[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 基于透视相机 Camera_Side 参数计算UV投影
[2m2025-05-23 17:04:54.357[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机类型: 透视
[2m2025-05-23 17:04:54.357[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机位置: <Vector (14.0000, 0.0000, 1.3000)>
[2m2025-05-23 17:04:54.357[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 焦距: 50.0mm, 视野: 39.6°, 宽高比: 1.50
[2m2025-05-23 17:04:54.498[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] UV投影计算完成
[2m2025-05-23 17:04:54.499[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/texture/20250522/side.jpg 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/side.jpg
[2m2025-05-23 17:04:54.507[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/side.jpg
[2m2025-05-23 17:04:54.507[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已应用纹理 http://192.168.1.110:8099/texture/20250522/side.jpg 到材质 Material_Side
[2m2025-05-23 17:04:54.538[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 所有相机处理完成，已将模型恢复到原始状态
[2m2025-05-23 17:04:54.538[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在保存模型到: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_170452.glb
[2m2025-05-23 17:04:54.538[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 模型信息: 名称=02_chuizhi, 顶点数=253192, 多边形数=168261
[2m2025-05-23 17:04:54.538[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 材质数量: 2
[2m2025-05-23 17:04:54.538[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始GLB导出...
[2m2025-05-23 17:04:54.693[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: INFO Draco mesh compression is available, use library at /Applications/Blender.app/Contents/Resources/4.4/scripts/addons_core/io_scene_gltf2/libextern_draco.dylib
[2m2025-05-23 17:04:54.694[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:04:54 | INFO: Starting glTF 2.0 export
[2m2025-05-23 17:04:54.694[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Starting glTF 2.0 export
[2m2025-05-23 17:04:54.740[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:04:54 | INFO: Extracting primitive: 02_chuizhi
[2m2025-05-23 17:04:54.741[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Extracting primitive: 02_chuizhi
[2m2025-05-23 17:04:54.795[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:04:54 | WARNING: The active Vertex Color will not be exported, as it is not used in the node tree of the material
[2m2025-05-23 17:04:54.795[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] The active Vertex Color will not be exported, as it is not used in the node tree of the material
[2m2025-05-23 17:04:54.952[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:04:54 | INFO: Primitives created: 2
[2m2025-05-23 17:04:54.952[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Primitives created: 2
[2m2025-05-23 17:04:54.988[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:04:54 | INFO: Finished glTF 2.0 export in 0.29518604278564453 s
[2m2025-05-23 17:04:54.989[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Finished glTF 2.0 export in 0.29518604278564453 s
[2m2025-05-23 17:04:54.989[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 模型已成功保存: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_170452.glb, 文件大小: 17073508字节
[2m2025-05-23 17:04:54.989[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 脚本执行完成!
[2m2025-05-23 17:04:55.003[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 
[2m2025-05-23 17:04:55.046[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: Blender 4.4.0 (hash 05377985c527 built 2025-03-18 01:31:05)
[2m2025-05-23 17:04:55.046[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: PLY import of '02_chuizhi.ply' took 69.41 ms
[2m2025-05-23 17:04:55.052[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 
[2m2025-05-23 17:04:55.052[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: Blender quit
[2m2025-05-23 17:04:55.066[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender进程退出，状态码: 0
[2m2025-05-23 17:04:55.067[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 成功生成模型文件: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_170452.glb，文件大小: 17073508 字节
[2m2025-05-23 17:04:55.067[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 纹理贴图完成: 02_chuizhi_20250522_20250523_170452.glb
[2m2025-05-23 17:04:55.070[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mo.s.w.s.m.m.a.HttpEntityMethodProcessor [0;39m [2m:[0;39m Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/json, application/*+json]
[2m2025-05-23 17:04:55.070[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mo.s.w.s.m.m.a.HttpEntityMethodProcessor [0;39m [2m:[0;39m Writing [com.shipmodel.dto.TextureMappingResponse@6b8b1362]
[2m2025-05-23 17:04:55.071[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:05:04.889[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m POST "/api/ship/texture-mapping", parameters={}
[2m2025-05-23 17:05:04.909[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36ms.w.s.m.m.a.RequestMappingHandlerMapping[0;39m [2m:[0;39m Mapped to com.shipmodel.controller.ShipModelController#processTextureMapping(TextureMappingRequest)
[2m2025-05-23 17:05:04.915[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mm.m.a.RequestResponseBodyMethodProcessor[0;39m [2m:[0;39m Read "application/json;charset=UTF-8" to [TextureMappingRequest{shipModel='/model/02_chuizhi.ply', textureDate=[/texture/20250522/top.jpg, /te (truncated)...]
[2m2025-05-23 17:05:04.915[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 接收到纹理贴图请求: TextureMappingRequest{shipModel='/model/02_chuizhi.ply', textureDate=[/texture/20250522/top.jpg, /texture/20250522/side.jpg]}
[2m2025-05-23 17:05:04.915[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 处理纹理贴图请求: 模型路径=/model/02_chuizhi.ply, 纹理路径数量=2
[2m2025-05-23 17:05:04.915[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 使用完整路径执行纹理贴图: 模型=/model/02_chuizhi.ply, 纹理=[/texture/20250522/top.jpg, /texture/20250522/side.jpg]
[2m2025-05-23 17:05:04.915[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 从路径提取的信息: 模型名称=02_chuizhi, 纹理日期=20250522
[2m2025-05-23 17:05:04.919[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 将生成的输出文件: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_170504.glb
[2m2025-05-23 17:05:04.919[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 处理的文件路径:
[2m2025-05-23 17:05:04.919[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 模型路径: http://192.168.1.110:8099/model/02_chuizhi.ply
[2m2025-05-23 17:05:04.919[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 顶视图路径: http://192.168.1.110:8099/texture/20250522/top.jpg
[2m2025-05-23 17:05:04.919[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 侧视图路径: http://192.168.1.110:8099/texture/20250522/side.jpg
[2m2025-05-23 17:05:04.919[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 执行Blender命令: [/Applications/Blender.app/Contents/MacOS/Blender, --background, --python, /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T//blender_script_437b75f0-8875-411a-be4a-27106d94cd0d.py, --, http://192.168.1.110:8099/model/02_chuizhi.ply, http://192.168.1.110:8099/texture/20250522/top.jpg, http://192.168.1.110:8099/texture/20250522/side.jpg, /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_170504.glb]
[2m2025-05-23 17:05:06.681[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始执行无界面Blender脚本...
[2m2025-05-23 17:05:06.695[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用模型路径: http://192.168.1.110:8099/model/02_chuizhi.ply
[2m2025-05-23 17:05:06.695[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用顶视图纹理: http://192.168.1.110:8099/texture/20250522/top.jpg
[2m2025-05-23 17:05:06.696[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用侧视图纹理: http://192.168.1.110:8099/texture/20250522/side.jpg
[2m2025-05-23 17:05:06.696[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 输出路径: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_170504.glb
[2m2025-05-23 17:05:06.697[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/model/02_chuizhi.ply 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:05:07.033[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:05:07.033[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在清除默认对象...
[2m2025-05-23 17:05:07.037[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在导入PLY文件: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:05:07.300[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已保存模型 02_chuizhi 的原始变换属性
[2m2025-05-23 17:05:07.301[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 清理临时模型文件: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:05:07.303[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建材质: Material_Top
[2m2025-05-23 17:05:07.303[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建材质: Material_Side
[2m2025-05-23 17:05:07.303[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始预先创建所有相机...
[2m2025-05-23 17:05:07.304[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建相机: Camera_Top
[2m2025-05-23 17:05:07.316[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建相机: Camera_Side
[2m2025-05-23 17:05:07.318[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始处理相机配置 1/2: Camera_Top
[2m2025-05-23 17:05:07.322[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已将模型旋转到相机 Camera_Top 对应的角度
[2m2025-05-23 17:05:08.167[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已为相机 Camera_Top 选择了 27604 个面
[2m2025-05-23 17:05:08.170[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 基于透视相机 Camera_Top 参数计算UV投影
[2m2025-05-23 17:05:08.251[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机类型: 透视
[2m2025-05-23 17:05:08.252[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机位置: <Vector (0.0000, 0.0000, 16.0000)>
[2m2025-05-23 17:05:08.252[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 焦距: 50.0mm, 视野: 39.6°, 宽高比: 1.50
[2m2025-05-23 17:05:08.448[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] UV投影计算完成
[2m2025-05-23 17:05:08.449[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/texture/20250522/top.jpg 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/top.jpg
[2m2025-05-23 17:05:08.460[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/top.jpg
[2m2025-05-23 17:05:08.461[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已应用纹理 http://192.168.1.110:8099/texture/20250522/top.jpg 到材质 Material_Top
[2m2025-05-23 17:05:08.542[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已恢复模型到原始角度，准备处理下一个相机
[2m2025-05-23 17:05:08.543[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始处理相机配置 2/2: Camera_Side
[2m2025-05-23 17:05:08.543[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已将模型旋转到相机 Camera_Side 对应的角度
[2m2025-05-23 17:05:09.222[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已为相机 Camera_Side 选择了 34405 个面
[2m2025-05-23 17:05:09.226[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 基于透视相机 Camera_Side 参数计算UV投影
[2m2025-05-23 17:05:09.234[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机类型: 透视
[2m2025-05-23 17:05:09.235[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机位置: <Vector (14.0000, 0.0000, 1.3000)>
[2m2025-05-23 17:05:09.235[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 焦距: 50.0mm, 视野: 39.6°, 宽高比: 1.50
[2m2025-05-23 17:05:09.566[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] UV投影计算完成
[2m2025-05-23 17:05:09.567[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/texture/20250522/side.jpg 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/side.jpg
[2m2025-05-23 17:05:09.577[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/side.jpg
[2m2025-05-23 17:05:09.577[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已应用纹理 http://192.168.1.110:8099/texture/20250522/side.jpg 到材质 Material_Side
[2m2025-05-23 17:05:09.878[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 所有相机处理完成，已将模型恢复到原始状态
[2m2025-05-23 17:05:09.879[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在保存模型到: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_170504.glb
[2m2025-05-23 17:05:09.880[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 模型信息: 名称=02_chuizhi, 顶点数=253192, 多边形数=168261
[2m2025-05-23 17:05:09.881[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 材质数量: 2
[2m2025-05-23 17:05:09.882[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始GLB导出...
[2m2025-05-23 17:05:10.571[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: INFO Draco mesh compression is available, use library at /Applications/Blender.app/Contents/Resources/4.4/scripts/addons_core/io_scene_gltf2/libextern_draco.dylib
[2m2025-05-23 17:05:10.571[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:05:10 | INFO: Starting glTF 2.0 export
[2m2025-05-23 17:05:10.572[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Starting glTF 2.0 export
[2m2025-05-23 17:05:10.789[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:05:10 | INFO: Extracting primitive: 02_chuizhi
[2m2025-05-23 17:05:10.789[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Extracting primitive: 02_chuizhi
[2m2025-05-23 17:05:10.915[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:05:10 | WARNING: The active Vertex Color will not be exported, as it is not used in the node tree of the material
[2m2025-05-23 17:05:10.915[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] The active Vertex Color will not be exported, as it is not used in the node tree of the material
[2m2025-05-23 17:05:11.231[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:05:11 | INFO: Primitives created: 2
[2m2025-05-23 17:05:11.232[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Primitives created: 2
[2m2025-05-23 17:05:11.314[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:05:11 | INFO: Finished glTF 2.0 export in 0.7432131767272949 s
[2m2025-05-23 17:05:11.315[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Finished glTF 2.0 export in 0.7432131767272949 s
[2m2025-05-23 17:05:11.315[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 模型已成功保存: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_170504.glb, 文件大小: 17073508字节
[2m2025-05-23 17:05:11.315[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 脚本执行完成!
[2m2025-05-23 17:05:11.358[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 
[2m2025-05-23 17:05:11.521[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: Blender 4.4.0 (hash 05377985c527 built 2025-03-18 01:31:05)
[2m2025-05-23 17:05:11.526[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: PLY import of '02_chuizhi.ply' took 261.68 ms
[2m2025-05-23 17:05:11.545[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 
[2m2025-05-23 17:05:11.586[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: Blender quit
[2m2025-05-23 17:05:11.610[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender进程退出，状态码: 0
[2m2025-05-23 17:05:11.613[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 成功生成模型文件: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_170504.glb，文件大小: 17073508 字节
[2m2025-05-23 17:05:11.614[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 纹理贴图完成: 02_chuizhi_20250522_20250523_170504.glb
[2m2025-05-23 17:05:11.619[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mo.s.w.s.m.m.a.HttpEntityMethodProcessor [0;39m [2m:[0;39m Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2m2025-05-23 17:05:11.623[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mo.s.w.s.m.m.a.HttpEntityMethodProcessor [0;39m [2m:[0;39m Writing [com.shipmodel.dto.TextureMappingResponse@5a0bb1aa]
[2m2025-05-23 17:05:11.637[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:05:11.800[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[io-8080-exec-10][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m HEAD "/models/02_chuizhi_20250522_20250523_170504.glb?t=1747991111657", parameters={masked}
[2m2025-05-23 17:05:11.804[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[io-8080-exec-10][0;39m [36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Mapped to ResourceHttpRequestHandler [URL [file:/Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/]]
[2m2025-05-23 17:05:12.007[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[io-8080-exec-10][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:05:12.010[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[io-8080-exec-10][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m GET "/models/02_chuizhi_20250522_20250523_170504.glb?t=1747991111657", parameters={masked}
[2m2025-05-23 17:05:12.011[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[io-8080-exec-10][0;39m [36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Mapped to ResourceHttpRequestHandler [URL [file:/Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/]]
[2m2025-05-23 17:05:12.622[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[io-8080-exec-10][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:06:42.841[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m POST "/api/ship/texture-mapping", parameters={}
[2m2025-05-23 17:06:42.844[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36ms.w.s.m.m.a.RequestMappingHandlerMapping[0;39m [2m:[0;39m Mapped to com.shipmodel.controller.ShipModelController#processTextureMapping(TextureMappingRequest)
[2m2025-05-23 17:06:42.848[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mm.m.a.RequestResponseBodyMethodProcessor[0;39m [2m:[0;39m Read "application/json;charset=UTF-8" to [TextureMappingRequest{shipModel='/model/02_chuizhi.ply', textureDate=[/texture/20250522/top.jpg, /te (truncated)...]
[2m2025-05-23 17:06:42.849[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 接收到纹理贴图请求: TextureMappingRequest{shipModel='/model/02_chuizhi.ply', textureDate=[/texture/20250522/top.jpg, /texture/20250522/side.jpg]}
[2m2025-05-23 17:06:42.850[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 处理纹理贴图请求: 模型路径=/model/02_chuizhi.ply, 纹理路径数量=2
[2m2025-05-23 17:06:42.850[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 使用完整路径执行纹理贴图: 模型=/model/02_chuizhi.ply, 纹理=[/texture/20250522/top.jpg, /texture/20250522/side.jpg]
[2m2025-05-23 17:06:42.850[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 从路径提取的信息: 模型名称=02_chuizhi, 纹理日期=20250522
[2m2025-05-23 17:06:42.854[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 将生成的输出文件: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_170642.glb
[2m2025-05-23 17:06:42.854[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 处理的文件路径:
[2m2025-05-23 17:06:42.854[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 模型路径: http://192.168.1.110:8099/model/02_chuizhi.ply
[2m2025-05-23 17:06:42.854[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 顶视图路径: http://192.168.1.110:8099/texture/20250522/top.jpg
[2m2025-05-23 17:06:42.854[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 侧视图路径: http://192.168.1.110:8099/texture/20250522/side.jpg
[2m2025-05-23 17:06:42.854[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 执行Blender命令: [/Applications/Blender.app/Contents/MacOS/Blender, --background, --python, /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T//blender_script_5210c1ab-1c48-4387-979f-3730e8f7537d.py, --, http://192.168.1.110:8099/model/02_chuizhi.ply, http://192.168.1.110:8099/texture/20250522/top.jpg, http://192.168.1.110:8099/texture/20250522/side.jpg, /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_170642.glb]
[2m2025-05-23 17:06:44.978[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始执行无界面Blender脚本...
[2m2025-05-23 17:06:44.979[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用模型路径: http://192.168.1.110:8099/model/02_chuizhi.ply
[2m2025-05-23 17:06:44.979[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用顶视图纹理: http://192.168.1.110:8099/texture/20250522/top.jpg
[2m2025-05-23 17:06:44.979[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用侧视图纹理: http://192.168.1.110:8099/texture/20250522/side.jpg
[2m2025-05-23 17:06:44.979[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 输出路径: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_170642.glb
[2m2025-05-23 17:06:44.979[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/model/02_chuizhi.ply 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:06:45.013[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:06:45.013[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在清除默认对象...
[2m2025-05-23 17:06:45.014[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在导入PLY文件: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:06:45.106[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已保存模型 02_chuizhi 的原始变换属性
[2m2025-05-23 17:06:45.106[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 清理临时模型文件: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:06:45.107[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建材质: Material_Top
[2m2025-05-23 17:06:45.107[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建材质: Material_Side
[2m2025-05-23 17:06:45.107[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始预先创建所有相机...
[2m2025-05-23 17:06:45.108[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建相机: Camera_Top
[2m2025-05-23 17:06:45.109[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建相机: Camera_Side
[2m2025-05-23 17:06:45.109[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始处理相机配置 1/2: Camera_Top
[2m2025-05-23 17:06:45.109[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已将模型旋转到相机 Camera_Top 对应的角度
[2m2025-05-23 17:06:45.890[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已为相机 Camera_Top 选择了 27604 个面
[2m2025-05-23 17:06:45.891[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 基于透视相机 Camera_Top 参数计算UV投影
[2m2025-05-23 17:06:46.007[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机类型: 透视
[2m2025-05-23 17:06:46.008[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机位置: <Vector (0.0000, 0.0000, 16.0000)>
[2m2025-05-23 17:06:46.010[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 焦距: 50.0mm, 视野: 39.6°, 宽高比: 1.50
[2m2025-05-23 17:06:46.239[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] UV投影计算完成
[2m2025-05-23 17:06:46.241[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/texture/20250522/top.jpg 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/top.jpg
[2m2025-05-23 17:06:46.255[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/top.jpg
[2m2025-05-23 17:06:46.256[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已应用纹理 http://192.168.1.110:8099/texture/20250522/top.jpg 到材质 Material_Top
[2m2025-05-23 17:06:46.326[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已恢复模型到原始角度，准备处理下一个相机
[2m2025-05-23 17:06:46.326[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始处理相机配置 2/2: Camera_Side
[2m2025-05-23 17:06:46.327[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已将模型旋转到相机 Camera_Side 对应的角度
[2m2025-05-23 17:06:47.112[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已为相机 Camera_Side 选择了 34405 个面
[2m2025-05-23 17:06:47.115[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 基于透视相机 Camera_Side 参数计算UV投影
[2m2025-05-23 17:06:47.126[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机类型: 透视
[2m2025-05-23 17:06:47.126[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机位置: <Vector (14.0000, 0.0000, 1.3000)>
[2m2025-05-23 17:06:47.126[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 焦距: 50.0mm, 视野: 39.6°, 宽高比: 1.50
[2m2025-05-23 17:06:47.370[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] UV投影计算完成
[2m2025-05-23 17:06:47.371[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/texture/20250522/side.jpg 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/side.jpg
[2m2025-05-23 17:06:47.379[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/side.jpg
[2m2025-05-23 17:06:47.380[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已应用纹理 http://192.168.1.110:8099/texture/20250522/side.jpg 到材质 Material_Side
[2m2025-05-23 17:06:47.433[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 所有相机处理完成，已将模型恢复到原始状态
[2m2025-05-23 17:06:47.433[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在保存模型到: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_170642.glb
[2m2025-05-23 17:06:47.433[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 模型信息: 名称=02_chuizhi, 顶点数=253192, 多边形数=168261
[2m2025-05-23 17:06:47.433[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 材质数量: 2
[2m2025-05-23 17:06:47.433[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始GLB导出...
[2m2025-05-23 17:06:47.642[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: INFO Draco mesh compression is available, use library at /Applications/Blender.app/Contents/Resources/4.4/scripts/addons_core/io_scene_gltf2/libextern_draco.dylib
[2m2025-05-23 17:06:47.642[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:06:47 | INFO: Starting glTF 2.0 export
[2m2025-05-23 17:06:47.643[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Starting glTF 2.0 export
[2m2025-05-23 17:06:47.696[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:06:47 | INFO: Extracting primitive: 02_chuizhi
[2m2025-05-23 17:06:47.697[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Extracting primitive: 02_chuizhi
[2m2025-05-23 17:06:47.807[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:06:47 | WARNING: The active Vertex Color will not be exported, as it is not used in the node tree of the material
[2m2025-05-23 17:06:47.807[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] The active Vertex Color will not be exported, as it is not used in the node tree of the material
[2m2025-05-23 17:06:48.176[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:06:48 | INFO: Primitives created: 2
[2m2025-05-23 17:06:48.177[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Primitives created: 2
[2m2025-05-23 17:06:48.226[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:06:48 | INFO: Finished glTF 2.0 export in 0.5835349559783936 s
[2m2025-05-23 17:06:48.227[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Finished glTF 2.0 export in 0.5835349559783936 s
[2m2025-05-23 17:06:48.228[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 模型已成功保存: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_170642.glb, 文件大小: 17073508字节
[2m2025-05-23 17:06:48.228[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 脚本执行完成!
[2m2025-05-23 17:06:48.270[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 
[2m2025-05-23 17:06:48.404[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: Blender 4.4.0 (hash 05377985c527 built 2025-03-18 01:31:05)
[2m2025-05-23 17:06:48.404[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: PLY import of '02_chuizhi.ply' took 90.72 ms
[2m2025-05-23 17:06:48.430[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 
[2m2025-05-23 17:06:48.431[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: Blender quit
[2m2025-05-23 17:06:48.493[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender进程退出，状态码: 0
[2m2025-05-23 17:06:48.496[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 成功生成模型文件: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_170642.glb，文件大小: 17073508 字节
[2m2025-05-23 17:06:48.496[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 纹理贴图完成: 02_chuizhi_20250522_20250523_170642.glb
[2m2025-05-23 17:06:48.507[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mo.s.w.s.m.m.a.HttpEntityMethodProcessor [0;39m [2m:[0;39m Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2m2025-05-23 17:06:48.509[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mo.s.w.s.m.m.a.HttpEntityMethodProcessor [0;39m [2m:[0;39m Writing [com.shipmodel.dto.TextureMappingResponse@5596a49]
[2m2025-05-23 17:06:48.512[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:06:48.526[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-3][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m HEAD "/models/02_chuizhi_20250522_20250523_170642.glb?t=1747991208516", parameters={masked}
[2m2025-05-23 17:06:48.530[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-3][0;39m [36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Mapped to ResourceHttpRequestHandler [URL [file:/Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/]]
[2m2025-05-23 17:06:48.560[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-3][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:06:48.566[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-3][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m GET "/models/02_chuizhi_20250522_20250523_170642.glb?t=1747991208516", parameters={masked}
[2m2025-05-23 17:06:48.570[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-3][0;39m [36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Mapped to ResourceHttpRequestHandler [URL [file:/Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/]]
[2m2025-05-23 17:06:48.833[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-3][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:11:43.768[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m POST "/api/ship/texture-mapping", parameters={}
[2m2025-05-23 17:11:43.770[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36ms.w.s.m.m.a.RequestMappingHandlerMapping[0;39m [2m:[0;39m Mapped to com.shipmodel.controller.ShipModelController#processTextureMapping(TextureMappingRequest)
[2m2025-05-23 17:11:43.774[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mm.m.a.RequestResponseBodyMethodProcessor[0;39m [2m:[0;39m Read "application/json;charset=UTF-8" to [TextureMappingRequest{shipModel='/model/02_chuizhi.ply', textureDate=[/texture/20250522/top.jpg, /te (truncated)...]
[2m2025-05-23 17:11:43.775[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 接收到纹理贴图请求: TextureMappingRequest{shipModel='/model/02_chuizhi.ply', textureDate=[/texture/20250522/top.jpg, /texture/20250522/side.jpg]}
[2m2025-05-23 17:11:43.775[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 处理纹理贴图请求: 模型路径=/model/02_chuizhi.ply, 纹理路径数量=2
[2m2025-05-23 17:11:43.775[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 使用完整路径执行纹理贴图: 模型=/model/02_chuizhi.ply, 纹理=[/texture/20250522/top.jpg, /texture/20250522/side.jpg]
[2m2025-05-23 17:11:43.775[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 从路径提取的信息: 模型名称=02_chuizhi, 纹理日期=20250522
[2m2025-05-23 17:11:43.778[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 将生成的输出文件: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171143.glb
[2m2025-05-23 17:11:43.778[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 处理的文件路径:
[2m2025-05-23 17:11:43.778[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 模型路径: http://192.168.1.110:8099/model/02_chuizhi.ply
[2m2025-05-23 17:11:43.778[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 顶视图路径: http://192.168.1.110:8099/texture/20250522/top.jpg
[2m2025-05-23 17:11:43.778[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 侧视图路径: http://192.168.1.110:8099/texture/20250522/side.jpg
[2m2025-05-23 17:11:43.778[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 执行Blender命令: [/Applications/Blender.app/Contents/MacOS/Blender, --background, --python, /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T//blender_script_f3d4ab7d-3f54-4159-ad4a-100c13d8ee77.py, --, http://192.168.1.110:8099/model/02_chuizhi.ply, http://192.168.1.110:8099/texture/20250522/top.jpg, http://192.168.1.110:8099/texture/20250522/side.jpg, /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171143.glb]
[2m2025-05-23 17:11:46.122[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始执行无界面Blender脚本...
[2m2025-05-23 17:11:46.122[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用模型路径: http://192.168.1.110:8099/model/02_chuizhi.ply
[2m2025-05-23 17:11:46.122[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用顶视图纹理: http://192.168.1.110:8099/texture/20250522/top.jpg
[2m2025-05-23 17:11:46.123[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用侧视图纹理: http://192.168.1.110:8099/texture/20250522/side.jpg
[2m2025-05-23 17:11:46.123[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 输出路径: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171143.glb
[2m2025-05-23 17:11:46.123[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/model/02_chuizhi.ply 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:11:46.164[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:11:46.164[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在清除默认对象...
[2m2025-05-23 17:11:46.165[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在导入PLY文件: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:11:46.263[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已保存模型 02_chuizhi 的原始变换属性
[2m2025-05-23 17:11:46.263[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 清理临时模型文件: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:11:46.264[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建材质: Material_Top
[2m2025-05-23 17:11:46.264[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建材质: Material_Side
[2m2025-05-23 17:11:46.265[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始预先创建所有相机...
[2m2025-05-23 17:11:46.265[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建相机: Camera_Top
[2m2025-05-23 17:11:46.266[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建相机: Camera_Side
[2m2025-05-23 17:11:46.266[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始处理相机配置 1/2: Camera_Top
[2m2025-05-23 17:11:46.266[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已将模型旋转到相机 Camera_Top 对应的角度
[2m2025-05-23 17:11:46.980[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已为相机 Camera_Top 选择了 27604 个面
[2m2025-05-23 17:11:46.982[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 基于透视相机 Camera_Top 参数计算UV投影
[2m2025-05-23 17:11:47.083[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机类型: 透视
[2m2025-05-23 17:11:47.083[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机位置: <Vector (0.0000, 0.0000, 16.0000)>
[2m2025-05-23 17:11:47.083[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 焦距: 50.0mm, 视野: 39.6°, 宽高比: 1.50
[2m2025-05-23 17:11:47.269[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] UV投影计算完成
[2m2025-05-23 17:11:47.270[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/texture/20250522/top.jpg 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/top.jpg
[2m2025-05-23 17:11:47.281[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/top.jpg
[2m2025-05-23 17:11:47.281[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已应用纹理 http://192.168.1.110:8099/texture/20250522/top.jpg 到材质 Material_Top
[2m2025-05-23 17:11:47.330[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已恢复模型到原始角度，准备处理下一个相机
[2m2025-05-23 17:11:47.330[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始处理相机配置 2/2: Camera_Side
[2m2025-05-23 17:11:47.330[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已将模型旋转到相机 Camera_Side 对应的角度
[2m2025-05-23 17:11:48.021[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已为相机 Camera_Side 选择了 34405 个面
[2m2025-05-23 17:11:48.025[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 基于透视相机 Camera_Side 参数计算UV投影
[2m2025-05-23 17:11:48.034[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机类型: 透视
[2m2025-05-23 17:11:48.034[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机位置: <Vector (14.0000, 0.0000, 1.3000)>
[2m2025-05-23 17:11:48.034[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 焦距: 50.0mm, 视野: 39.6°, 宽高比: 1.50
[2m2025-05-23 17:11:48.266[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] UV投影计算完成
[2m2025-05-23 17:11:48.267[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/texture/20250522/side.jpg 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/side.jpg
[2m2025-05-23 17:11:48.276[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/side.jpg
[2m2025-05-23 17:11:48.277[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已应用纹理 http://192.168.1.110:8099/texture/20250522/side.jpg 到材质 Material_Side
[2m2025-05-23 17:11:48.322[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 所有相机处理完成，已将模型恢复到原始状态
[2m2025-05-23 17:11:48.322[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在保存模型到: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171143.glb
[2m2025-05-23 17:11:48.322[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 模型信息: 名称=02_chuizhi, 顶点数=253192, 多边形数=168261
[2m2025-05-23 17:11:48.322[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 材质数量: 2
[2m2025-05-23 17:11:48.322[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始GLB导出...
[2m2025-05-23 17:11:48.570[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: INFO Draco mesh compression is available, use library at /Applications/Blender.app/Contents/Resources/4.4/scripts/addons_core/io_scene_gltf2/libextern_draco.dylib
[2m2025-05-23 17:11:48.571[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:11:48 | INFO: Starting glTF 2.0 export
[2m2025-05-23 17:11:48.571[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Starting glTF 2.0 export
[2m2025-05-23 17:11:48.654[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:11:48 | INFO: Extracting primitive: 02_chuizhi
[2m2025-05-23 17:11:48.655[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Extracting primitive: 02_chuizhi
[2m2025-05-23 17:11:48.755[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:11:48 | WARNING: The active Vertex Color will not be exported, as it is not used in the node tree of the material
[2m2025-05-23 17:11:48.755[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] The active Vertex Color will not be exported, as it is not used in the node tree of the material
[2m2025-05-23 17:11:49.047[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:11:49 | INFO: Primitives created: 2
[2m2025-05-23 17:11:49.047[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Primitives created: 2
[2m2025-05-23 17:11:49.102[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:11:49 | INFO: Finished glTF 2.0 export in 0.5316610336303711 s
[2m2025-05-23 17:11:49.105[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Finished glTF 2.0 export in 0.5316610336303711 s
[2m2025-05-23 17:11:49.105[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 模型已成功保存: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171143.glb, 文件大小: 17073508字节
[2m2025-05-23 17:11:49.105[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 脚本执行完成!
[2m2025-05-23 17:11:49.131[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 
[2m2025-05-23 17:11:49.215[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: Blender 4.4.0 (hash 05377985c527 built 2025-03-18 01:31:05)
[2m2025-05-23 17:11:49.215[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: PLY import of '02_chuizhi.ply' took 96.83 ms
[2m2025-05-23 17:11:49.224[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 
[2m2025-05-23 17:11:49.224[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: Blender quit
[2m2025-05-23 17:11:49.244[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender进程退出，状态码: 0
[2m2025-05-23 17:11:49.245[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 成功生成模型文件: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171143.glb，文件大小: 17073508 字节
[2m2025-05-23 17:11:49.245[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 纹理贴图完成: 02_chuizhi_20250522_20250523_171143.glb
[2m2025-05-23 17:11:49.247[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mo.s.w.s.m.m.a.HttpEntityMethodProcessor [0;39m [2m:[0;39m Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2m2025-05-23 17:11:49.247[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mo.s.w.s.m.m.a.HttpEntityMethodProcessor [0;39m [2m:[0;39m Writing [com.shipmodel.dto.TextureMappingResponse@29acffcb]
[2m2025-05-23 17:11:49.249[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:11:49.259[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-6][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m HEAD "/models/02_chuizhi_20250522_20250523_171143.glb?t=1747991509251", parameters={masked}
[2m2025-05-23 17:11:49.264[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-6][0;39m [36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Mapped to ResourceHttpRequestHandler [URL [file:/Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/]]
[2m2025-05-23 17:11:49.291[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-6][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:11:49.293[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-6][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m GET "/models/02_chuizhi_20250522_20250523_171143.glb?t=1747991509251", parameters={masked}
[2m2025-05-23 17:11:49.294[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-6][0;39m [36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Mapped to ResourceHttpRequestHandler [URL [file:/Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/]]
[2m2025-05-23 17:11:49.649[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-6][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:15:39.202[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m POST "/api/ship/texture-mapping", parameters={}
[2m2025-05-23 17:15:39.213[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36ms.w.s.m.m.a.RequestMappingHandlerMapping[0;39m [2m:[0;39m Mapped to com.shipmodel.controller.ShipModelController#processTextureMapping(TextureMappingRequest)
[2m2025-05-23 17:15:39.232[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mm.m.a.RequestResponseBodyMethodProcessor[0;39m [2m:[0;39m Read "application/json;charset=UTF-8" to [TextureMappingRequest{shipModel='/model/02_chuizhi.ply', textureDate=[/texture/20250522/top.jpg, /te (truncated)...]
[2m2025-05-23 17:15:39.270[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 接收到纹理贴图请求: TextureMappingRequest{shipModel='/model/02_chuizhi.ply', textureDate=[/texture/20250522/top.jpg, /texture/20250522/side.jpg]}
[2m2025-05-23 17:15:39.271[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 处理纹理贴图请求: 模型路径=/model/02_chuizhi.ply, 纹理路径数量=2
[2m2025-05-23 17:15:39.271[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 使用完整路径执行纹理贴图: 模型=/model/02_chuizhi.ply, 纹理=[/texture/20250522/top.jpg, /texture/20250522/side.jpg]
[2m2025-05-23 17:15:39.271[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 从路径提取的信息: 模型名称=02_chuizhi, 纹理日期=20250522
[2m2025-05-23 17:15:39.283[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 将生成的输出文件: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171539.glb
[2m2025-05-23 17:15:39.283[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 处理的文件路径:
[2m2025-05-23 17:15:39.283[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 模型路径: http://192.168.1.110:8099/model/02_chuizhi.ply
[2m2025-05-23 17:15:39.283[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 顶视图路径: http://192.168.1.110:8099/texture/20250522/top.jpg
[2m2025-05-23 17:15:39.283[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 侧视图路径: http://192.168.1.110:8099/texture/20250522/side.jpg
[2m2025-05-23 17:15:39.283[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 执行Blender命令: [/Applications/Blender.app/Contents/MacOS/Blender, --background, --python, /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T//blender_script_c0afad81-11fc-401a-944e-88d6aab94846.py, --, http://192.168.1.110:8099/model/02_chuizhi.ply, http://192.168.1.110:8099/texture/20250522/top.jpg, http://192.168.1.110:8099/texture/20250522/side.jpg, /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171539.glb]
[2m2025-05-23 17:15:40.159[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始执行无界面Blender脚本...
[2m2025-05-23 17:15:40.159[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用模型路径: http://192.168.1.110:8099/model/02_chuizhi.ply
[2m2025-05-23 17:15:40.159[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用顶视图纹理: http://192.168.1.110:8099/texture/20250522/top.jpg
[2m2025-05-23 17:15:40.159[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用侧视图纹理: http://192.168.1.110:8099/texture/20250522/side.jpg
[2m2025-05-23 17:15:40.159[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 输出路径: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171539.glb
[2m2025-05-23 17:15:40.159[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/model/02_chuizhi.ply 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:15:40.194[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:15:40.194[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在清除默认对象...
[2m2025-05-23 17:15:40.195[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在导入PLY文件: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:15:40.261[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已保存模型 02_chuizhi 的原始变换属性
[2m2025-05-23 17:15:40.262[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 清理临时模型文件: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:15:40.262[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建材质: Material_Top
[2m2025-05-23 17:15:40.262[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建材质: Material_Side
[2m2025-05-23 17:15:40.262[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始预先创建所有相机...
[2m2025-05-23 17:15:40.263[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建相机: Camera_Top
[2m2025-05-23 17:15:40.263[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建相机: Camera_Side
[2m2025-05-23 17:15:40.263[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始处理相机配置 1/2: Camera_Top
[2m2025-05-23 17:15:40.263[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已将模型旋转到相机 Camera_Top 对应的角度
[2m2025-05-23 17:15:40.673[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已为相机 Camera_Top 选择了 27604 个面
[2m2025-05-23 17:15:40.675[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 基于透视相机 Camera_Top 参数计算UV投影
[2m2025-05-23 17:15:40.742[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机类型: 透视
[2m2025-05-23 17:15:40.743[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机位置: <Vector (0.0000, 0.0000, 16.0000)>
[2m2025-05-23 17:15:40.743[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 焦距: 50.0mm, 视野: 39.6°, 宽高比: 1.50
[2m2025-05-23 17:15:40.867[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] UV投影计算完成
[2m2025-05-23 17:15:40.868[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/texture/20250522/top.jpg 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/top.jpg
[2m2025-05-23 17:15:40.877[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/top.jpg
[2m2025-05-23 17:15:40.877[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已应用纹理 http://192.168.1.110:8099/texture/20250522/top.jpg 到材质 Material_Top
[2m2025-05-23 17:15:40.911[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已恢复模型到原始角度，准备处理下一个相机
[2m2025-05-23 17:15:40.912[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始处理相机配置 2/2: Camera_Side
[2m2025-05-23 17:15:40.912[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已将模型旋转到相机 Camera_Side 对应的角度
[2m2025-05-23 17:15:41.338[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已为相机 Camera_Side 选择了 34405 个面
[2m2025-05-23 17:15:41.340[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 基于透视相机 Camera_Side 参数计算UV投影
[2m2025-05-23 17:15:41.345[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机类型: 透视
[2m2025-05-23 17:15:41.345[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机位置: <Vector (14.0000, 0.0000, 1.3000)>
[2m2025-05-23 17:15:41.345[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 焦距: 50.0mm, 视野: 39.6°, 宽高比: 1.50
[2m2025-05-23 17:15:41.491[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] UV投影计算完成
[2m2025-05-23 17:15:41.492[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/texture/20250522/side.jpg 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/side.jpg
[2m2025-05-23 17:15:41.498[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/side.jpg
[2m2025-05-23 17:15:41.498[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已应用纹理 http://192.168.1.110:8099/texture/20250522/side.jpg 到材质 Material_Side
[2m2025-05-23 17:15:41.531[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 所有相机处理完成，已将模型恢复到原始状态
[2m2025-05-23 17:15:41.531[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在保存模型到: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171539.glb
[2m2025-05-23 17:15:41.531[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 模型信息: 名称=02_chuizhi, 顶点数=253192, 多边形数=168261
[2m2025-05-23 17:15:41.531[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 材质数量: 2
[2m2025-05-23 17:15:41.531[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始GLB导出...
[2m2025-05-23 17:15:41.678[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: INFO Draco mesh compression is available, use library at /Applications/Blender.app/Contents/Resources/4.4/scripts/addons_core/io_scene_gltf2/libextern_draco.dylib
[2m2025-05-23 17:15:41.678[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:15:41 | INFO: Starting glTF 2.0 export
[2m2025-05-23 17:15:41.678[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Starting glTF 2.0 export
[2m2025-05-23 17:15:41.714[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:15:41 | INFO: Extracting primitive: 02_chuizhi
[2m2025-05-23 17:15:41.714[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Extracting primitive: 02_chuizhi
[2m2025-05-23 17:15:41.773[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:15:41 | WARNING: The active Vertex Color will not be exported, as it is not used in the node tree of the material
[2m2025-05-23 17:15:41.773[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] The active Vertex Color will not be exported, as it is not used in the node tree of the material
[2m2025-05-23 17:15:41.929[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:15:41 | INFO: Primitives created: 2
[2m2025-05-23 17:15:41.930[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Primitives created: 2
[2m2025-05-23 17:15:41.960[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:15:41 | INFO: Finished glTF 2.0 export in 0.2822411060333252 s
[2m2025-05-23 17:15:41.960[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Finished glTF 2.0 export in 0.2822411060333252 s
[2m2025-05-23 17:15:41.960[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 模型已成功保存: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171539.glb, 文件大小: 17073508字节
[2m2025-05-23 17:15:41.960[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 脚本执行完成!
[2m2025-05-23 17:15:41.975[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 
[2m2025-05-23 17:15:42.017[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: Blender 4.4.0 (hash 05377985c527 built 2025-03-18 01:31:05)
[2m2025-05-23 17:15:42.017[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: PLY import of '02_chuizhi.ply' took 66.01 ms
[2m2025-05-23 17:15:42.025[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 
[2m2025-05-23 17:15:42.025[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: Blender quit
[2m2025-05-23 17:15:42.038[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender进程退出，状态码: 0
[2m2025-05-23 17:15:42.038[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 成功生成模型文件: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171539.glb，文件大小: 17073508 字节
[2m2025-05-23 17:15:42.039[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 纹理贴图完成: 02_chuizhi_20250522_20250523_171539.glb
[2m2025-05-23 17:15:42.040[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mo.s.w.s.m.m.a.HttpEntityMethodProcessor [0;39m [2m:[0;39m Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2m2025-05-23 17:15:42.040[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mo.s.w.s.m.m.a.HttpEntityMethodProcessor [0;39m [2m:[0;39m Writing [com.shipmodel.dto.TextureMappingResponse@59c25c0f]
[2m2025-05-23 17:15:42.041[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:15:42.052[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m HEAD "/models/02_chuizhi_20250522_20250523_171539.glb?t=1747991742046", parameters={masked}
[2m2025-05-23 17:15:42.053[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Mapped to ResourceHttpRequestHandler [URL [file:/Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/]]
[2m2025-05-23 17:15:42.059[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:15:42.060[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m GET "/models/02_chuizhi_20250522_20250523_171539.glb?t=1747991742046", parameters={masked}
[2m2025-05-23 17:15:42.060[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Mapped to ResourceHttpRequestHandler [URL [file:/Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/]]
[2m2025-05-23 17:15:42.092[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:16:20.838[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m POST "/api/ship/texture-mapping", parameters={}
[2m2025-05-23 17:16:20.840[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36ms.w.s.m.m.a.RequestMappingHandlerMapping[0;39m [2m:[0;39m Mapped to com.shipmodel.controller.ShipModelController#processTextureMapping(TextureMappingRequest)
[2m2025-05-23 17:16:20.844[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mm.m.a.RequestResponseBodyMethodProcessor[0;39m [2m:[0;39m Read "application/json;charset=UTF-8" to [TextureMappingRequest{shipModel='/model/02_chuizhi.ply', textureDate=[/texture/20250522/top.jpg, /te (truncated)...]
[2m2025-05-23 17:16:20.846[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 接收到纹理贴图请求: TextureMappingRequest{shipModel='/model/02_chuizhi.ply', textureDate=[/texture/20250522/top.jpg, /texture/20250522/side.jpg]}
[2m2025-05-23 17:16:20.846[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 处理纹理贴图请求: 模型路径=/model/02_chuizhi.ply, 纹理路径数量=2
[2m2025-05-23 17:16:20.846[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 使用完整路径执行纹理贴图: 模型=/model/02_chuizhi.ply, 纹理=[/texture/20250522/top.jpg, /texture/20250522/side.jpg]
[2m2025-05-23 17:16:20.846[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 从路径提取的信息: 模型名称=02_chuizhi, 纹理日期=20250522
[2m2025-05-23 17:16:20.872[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 将生成的输出文件: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171620.glb
[2m2025-05-23 17:16:20.872[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 处理的文件路径:
[2m2025-05-23 17:16:20.872[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 模型路径: http://192.168.1.110:8099/model/02_chuizhi.ply
[2m2025-05-23 17:16:20.872[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 顶视图路径: http://192.168.1.110:8099/texture/20250522/top.jpg
[2m2025-05-23 17:16:20.872[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 侧视图路径: http://192.168.1.110:8099/texture/20250522/side.jpg
[2m2025-05-23 17:16:20.872[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 执行Blender命令: [/Applications/Blender.app/Contents/MacOS/Blender, --background, --python, /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T//blender_script_5f9bb73d-b3c7-4dac-bdd6-df970d7b5e20.py, --, http://192.168.1.110:8099/model/02_chuizhi.ply, http://192.168.1.110:8099/texture/20250522/top.jpg, http://192.168.1.110:8099/texture/20250522/side.jpg, /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171620.glb]
[2m2025-05-23 17:16:22.860[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始执行无界面Blender脚本...
[2m2025-05-23 17:16:22.861[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用模型路径: http://192.168.1.110:8099/model/02_chuizhi.ply
[2m2025-05-23 17:16:22.861[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用顶视图纹理: http://192.168.1.110:8099/texture/20250522/top.jpg
[2m2025-05-23 17:16:22.861[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用侧视图纹理: http://192.168.1.110:8099/texture/20250522/side.jpg
[2m2025-05-23 17:16:22.861[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 输出路径: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171620.glb
[2m2025-05-23 17:16:22.861[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/model/02_chuizhi.ply 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:16:22.901[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:16:22.902[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在清除默认对象...
[2m2025-05-23 17:16:22.902[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在导入PLY文件: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:16:22.982[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已保存模型 02_chuizhi 的原始变换属性
[2m2025-05-23 17:16:22.982[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 清理临时模型文件: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:16:22.983[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建材质: Material_Top
[2m2025-05-23 17:16:22.983[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建材质: Material_Side
[2m2025-05-23 17:16:22.983[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始预先创建所有相机...
[2m2025-05-23 17:16:22.984[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建相机: Camera_Top
[2m2025-05-23 17:16:22.984[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建相机: Camera_Side
[2m2025-05-23 17:16:22.984[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始处理相机配置 1/2: Camera_Top
[2m2025-05-23 17:16:22.985[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已将模型旋转到相机 Camera_Top 对应的角度
[2m2025-05-23 17:16:23.662[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已为相机 Camera_Top 选择了 27604 个面
[2m2025-05-23 17:16:23.663[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 基于透视相机 Camera_Top 参数计算UV投影
[2m2025-05-23 17:16:23.765[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机类型: 透视
[2m2025-05-23 17:16:23.765[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机位置: <Vector (0.0000, 0.0000, 16.0000)>
[2m2025-05-23 17:16:23.765[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 焦距: 50.0mm, 视野: 39.6°, 宽高比: 1.50
[2m2025-05-23 17:16:24.007[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] UV投影计算完成
[2m2025-05-23 17:16:24.009[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/texture/20250522/top.jpg 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/top.jpg
[2m2025-05-23 17:16:24.019[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/top.jpg
[2m2025-05-23 17:16:24.019[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已应用纹理 http://192.168.1.110:8099/texture/20250522/top.jpg 到材质 Material_Top
[2m2025-05-23 17:16:24.074[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已恢复模型到原始角度，准备处理下一个相机
[2m2025-05-23 17:16:24.074[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始处理相机配置 2/2: Camera_Side
[2m2025-05-23 17:16:24.075[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已将模型旋转到相机 Camera_Side 对应的角度
[2m2025-05-23 17:16:24.763[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已为相机 Camera_Side 选择了 34405 个面
[2m2025-05-23 17:16:24.766[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 基于透视相机 Camera_Side 参数计算UV投影
[2m2025-05-23 17:16:24.775[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机类型: 透视
[2m2025-05-23 17:16:24.775[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机位置: <Vector (14.0000, 0.0000, 1.3000)>
[2m2025-05-23 17:16:24.775[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 焦距: 50.0mm, 视野: 39.6°, 宽高比: 1.50
[2m2025-05-23 17:16:24.981[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] UV投影计算完成
[2m2025-05-23 17:16:24.982[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/texture/20250522/side.jpg 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/side.jpg
[2m2025-05-23 17:16:24.992[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/side.jpg
[2m2025-05-23 17:16:24.992[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已应用纹理 http://192.168.1.110:8099/texture/20250522/side.jpg 到材质 Material_Side
[2m2025-05-23 17:16:25.036[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 所有相机处理完成，已将模型恢复到原始状态
[2m2025-05-23 17:16:25.036[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在保存模型到: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171620.glb
[2m2025-05-23 17:16:25.036[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 模型信息: 名称=02_chuizhi, 顶点数=253192, 多边形数=168261
[2m2025-05-23 17:16:25.036[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 材质数量: 2
[2m2025-05-23 17:16:25.036[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始GLB导出...
[2m2025-05-23 17:16:25.213[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: INFO Draco mesh compression is available, use library at /Applications/Blender.app/Contents/Resources/4.4/scripts/addons_core/io_scene_gltf2/libextern_draco.dylib
[2m2025-05-23 17:16:25.213[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:16:25 | INFO: Starting glTF 2.0 export
[2m2025-05-23 17:16:25.213[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Starting glTF 2.0 export
[2m2025-05-23 17:16:25.258[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:16:25 | INFO: Extracting primitive: 02_chuizhi
[2m2025-05-23 17:16:25.258[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Extracting primitive: 02_chuizhi
[2m2025-05-23 17:16:25.326[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:16:25 | WARNING: The active Vertex Color will not be exported, as it is not used in the node tree of the material
[2m2025-05-23 17:16:25.326[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] The active Vertex Color will not be exported, as it is not used in the node tree of the material
[2m2025-05-23 17:16:25.564[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:16:25 | INFO: Primitives created: 2
[2m2025-05-23 17:16:25.564[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Primitives created: 2
[2m2025-05-23 17:16:25.609[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:16:25 | INFO: Finished glTF 2.0 export in 0.395463228225708 s
[2m2025-05-23 17:16:25.609[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Finished glTF 2.0 export in 0.395463228225708 s
[2m2025-05-23 17:16:25.609[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 模型已成功保存: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171620.glb, 文件大小: 17073508字节
[2m2025-05-23 17:16:25.609[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 脚本执行完成!
[2m2025-05-23 17:16:25.634[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 
[2m2025-05-23 17:16:25.707[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: Blender 4.4.0 (hash 05377985c527 built 2025-03-18 01:31:05)
[2m2025-05-23 17:16:25.708[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: PLY import of '02_chuizhi.ply' took 78.90 ms
[2m2025-05-23 17:16:25.716[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 
[2m2025-05-23 17:16:25.716[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: Blender quit
[2m2025-05-23 17:16:25.740[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender进程退出，状态码: 0
[2m2025-05-23 17:16:25.741[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 成功生成模型文件: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171620.glb，文件大小: 17073508 字节
[2m2025-05-23 17:16:25.741[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 纹理贴图完成: 02_chuizhi_20250522_20250523_171620.glb
[2m2025-05-23 17:16:25.743[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mo.s.w.s.m.m.a.HttpEntityMethodProcessor [0;39m [2m:[0;39m Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2m2025-05-23 17:16:25.743[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mo.s.w.s.m.m.a.HttpEntityMethodProcessor [0;39m [2m:[0;39m Writing [com.shipmodel.dto.TextureMappingResponse@33865d79]
[2m2025-05-23 17:16:25.744[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-1][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:16:25.750[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m HEAD "/models/02_chuizhi_20250522_20250523_171620.glb?t=1747991785746", parameters={masked}
[2m2025-05-23 17:16:25.752[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Mapped to ResourceHttpRequestHandler [URL [file:/Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/]]
[2m2025-05-23 17:16:25.765[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:16:25.766[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m GET "/models/02_chuizhi_20250522_20250523_171620.glb?t=1747991785746", parameters={masked}
[2m2025-05-23 17:16:25.767[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Mapped to ResourceHttpRequestHandler [URL [file:/Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/]]
[2m2025-05-23 17:16:25.878[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-2][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:17:36.881[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m POST "/api/ship/texture-mapping", parameters={}
[2m2025-05-23 17:17:36.890[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36ms.w.s.m.m.a.RequestMappingHandlerMapping[0;39m [2m:[0;39m Mapped to com.shipmodel.controller.ShipModelController#processTextureMapping(TextureMappingRequest)
[2m2025-05-23 17:17:36.897[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mm.m.a.RequestResponseBodyMethodProcessor[0;39m [2m:[0;39m Read "application/json;charset=UTF-8" to [TextureMappingRequest{shipModel='/model/02_chuizhi.ply', textureDate=[/texture/20250522/top.jpg, /te (truncated)...]
[2m2025-05-23 17:17:36.898[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 接收到纹理贴图请求: TextureMappingRequest{shipModel='/model/02_chuizhi.ply', textureDate=[/texture/20250522/top.jpg, /texture/20250522/side.jpg]}
[2m2025-05-23 17:17:36.898[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 处理纹理贴图请求: 模型路径=/model/02_chuizhi.ply, 纹理路径数量=2
[2m2025-05-23 17:17:36.898[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 使用完整路径执行纹理贴图: 模型=/model/02_chuizhi.ply, 纹理=[/texture/20250522/top.jpg, /texture/20250522/side.jpg]
[2m2025-05-23 17:17:36.899[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 从路径提取的信息: 模型名称=02_chuizhi, 纹理日期=20250522
[2m2025-05-23 17:17:36.901[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 将生成的输出文件: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171736.glb
[2m2025-05-23 17:17:36.901[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 处理的文件路径:
[2m2025-05-23 17:17:36.901[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 模型路径: http://192.168.1.110:8099/model/02_chuizhi.ply
[2m2025-05-23 17:17:36.901[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 顶视图路径: http://192.168.1.110:8099/texture/20250522/top.jpg
[2m2025-05-23 17:17:36.901[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 侧视图路径: http://192.168.1.110:8099/texture/20250522/side.jpg
[2m2025-05-23 17:17:36.901[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 执行Blender命令: [/Applications/Blender.app/Contents/MacOS/Blender, --background, --python, /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T//blender_script_bb7ec0fe-c2be-4861-a710-b4c755714eb2.py, --, http://192.168.1.110:8099/model/02_chuizhi.ply, http://192.168.1.110:8099/texture/20250522/top.jpg, http://192.168.1.110:8099/texture/20250522/side.jpg, /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171736.glb]
[2m2025-05-23 17:17:40.153[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始执行无界面Blender脚本...
[2m2025-05-23 17:17:40.153[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用模型路径: http://192.168.1.110:8099/model/02_chuizhi.ply
[2m2025-05-23 17:17:40.153[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用顶视图纹理: http://192.168.1.110:8099/texture/20250522/top.jpg
[2m2025-05-23 17:17:40.154[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用侧视图纹理: http://192.168.1.110:8099/texture/20250522/side.jpg
[2m2025-05-23 17:17:40.154[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 输出路径: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171736.glb
[2m2025-05-23 17:17:40.154[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/model/02_chuizhi.ply 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:17:40.213[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:17:40.213[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在清除默认对象...
[2m2025-05-23 17:17:40.214[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在导入PLY文件: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:17:40.360[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已保存模型 02_chuizhi 的原始变换属性
[2m2025-05-23 17:17:40.361[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 清理临时模型文件: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:17:40.362[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建材质: Material_Top
[2m2025-05-23 17:17:40.362[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建材质: Material_Side
[2m2025-05-23 17:17:40.362[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始预先创建所有相机...
[2m2025-05-23 17:17:40.364[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建相机: Camera_Top
[2m2025-05-23 17:17:40.364[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建相机: Camera_Side
[2m2025-05-23 17:17:40.364[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始处理相机配置 1/2: Camera_Top
[2m2025-05-23 17:17:40.365[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已将模型旋转到相机 Camera_Top 对应的角度
[2m2025-05-23 17:17:41.037[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已为相机 Camera_Top 选择了 27604 个面
[2m2025-05-23 17:17:41.040[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 基于透视相机 Camera_Top 参数计算UV投影
[2m2025-05-23 17:17:41.129[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机类型: 透视
[2m2025-05-23 17:17:41.129[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机位置: <Vector (0.0000, 0.0000, 16.0000)>
[2m2025-05-23 17:17:41.129[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 焦距: 50.0mm, 视野: 39.6°, 宽高比: 1.50
[2m2025-05-23 17:17:41.299[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] UV投影计算完成
[2m2025-05-23 17:17:41.300[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/texture/20250522/top.jpg 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/top.jpg
[2m2025-05-23 17:17:41.311[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/top.jpg
[2m2025-05-23 17:17:41.311[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已应用纹理 http://192.168.1.110:8099/texture/20250522/top.jpg 到材质 Material_Top
[2m2025-05-23 17:17:41.355[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已恢复模型到原始角度，准备处理下一个相机
[2m2025-05-23 17:17:41.355[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始处理相机配置 2/2: Camera_Side
[2m2025-05-23 17:17:41.355[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已将模型旋转到相机 Camera_Side 对应的角度
[2m2025-05-23 17:17:42.048[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已为相机 Camera_Side 选择了 34405 个面
[2m2025-05-23 17:17:42.052[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 基于透视相机 Camera_Side 参数计算UV投影
[2m2025-05-23 17:17:42.060[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机类型: 透视
[2m2025-05-23 17:17:42.060[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机位置: <Vector (14.0000, 0.0000, 1.3000)>
[2m2025-05-23 17:17:42.060[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 焦距: 50.0mm, 视野: 39.6°, 宽高比: 1.50
[2m2025-05-23 17:17:42.278[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] UV投影计算完成
[2m2025-05-23 17:17:42.278[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/texture/20250522/side.jpg 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/side.jpg
[2m2025-05-23 17:17:42.290[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/side.jpg
[2m2025-05-23 17:17:42.290[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已应用纹理 http://192.168.1.110:8099/texture/20250522/side.jpg 到材质 Material_Side
[2m2025-05-23 17:17:42.333[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 所有相机处理完成，已将模型恢复到原始状态
[2m2025-05-23 17:17:42.333[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在保存模型到: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171736.glb
[2m2025-05-23 17:17:42.334[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 模型信息: 名称=02_chuizhi, 顶点数=253192, 多边形数=168261
[2m2025-05-23 17:17:42.334[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 材质数量: 2
[2m2025-05-23 17:17:42.334[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始GLB导出...
[2m2025-05-23 17:17:42.527[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: INFO Draco mesh compression is available, use library at /Applications/Blender.app/Contents/Resources/4.4/scripts/addons_core/io_scene_gltf2/libextern_draco.dylib
[2m2025-05-23 17:17:42.527[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:17:42 | INFO: Starting glTF 2.0 export
[2m2025-05-23 17:17:42.527[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Starting glTF 2.0 export
[2m2025-05-23 17:17:42.574[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:17:42 | INFO: Extracting primitive: 02_chuizhi
[2m2025-05-23 17:17:42.575[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Extracting primitive: 02_chuizhi
[2m2025-05-23 17:17:42.652[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:17:42 | WARNING: The active Vertex Color will not be exported, as it is not used in the node tree of the material
[2m2025-05-23 17:17:42.653[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] The active Vertex Color will not be exported, as it is not used in the node tree of the material
[2m2025-05-23 17:17:42.874[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:17:42 | INFO: Primitives created: 2
[2m2025-05-23 17:17:42.874[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Primitives created: 2
[2m2025-05-23 17:17:42.914[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:17:42 | INFO: Finished glTF 2.0 export in 0.3868980407714844 s
[2m2025-05-23 17:17:42.914[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Finished glTF 2.0 export in 0.3868980407714844 s
[2m2025-05-23 17:17:42.914[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 模型已成功保存: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171736.glb, 文件大小: 17073508字节
[2m2025-05-23 17:17:42.914[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 脚本执行完成!
[2m2025-05-23 17:17:42.936[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 
[2m2025-05-23 17:17:43.012[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: Blender 4.4.0 (hash 05377985c527 built 2025-03-18 01:31:05)
[2m2025-05-23 17:17:43.012[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: PLY import of '02_chuizhi.ply' took 145.00 ms
[2m2025-05-23 17:17:43.019[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 
[2m2025-05-23 17:17:43.019[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: Blender quit
[2m2025-05-23 17:17:43.042[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender进程退出，状态码: 0
[2m2025-05-23 17:17:43.043[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 成功生成模型文件: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171736.glb，文件大小: 17073508 字节
[2m2025-05-23 17:17:43.043[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 纹理贴图完成: 02_chuizhi_20250522_20250523_171736.glb
[2m2025-05-23 17:17:43.044[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mo.s.w.s.m.m.a.HttpEntityMethodProcessor [0;39m [2m:[0;39m Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2m2025-05-23 17:17:43.045[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mo.s.w.s.m.m.a.HttpEntityMethodProcessor [0;39m [2m:[0;39m Writing [com.shipmodel.dto.TextureMappingResponse@6ad38955]
[2m2025-05-23 17:17:43.046[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-4][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:17:43.053[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m HEAD "/models/02_chuizhi_20250522_20250523_171736.glb?t=1747991863049", parameters={masked}
[2m2025-05-23 17:17:43.054[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Mapped to ResourceHttpRequestHandler [URL [file:/Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/]]
[2m2025-05-23 17:17:43.066[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:17:43.068[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m GET "/models/02_chuizhi_20250522_20250523_171736.glb?t=1747991863049", parameters={masked}
[2m2025-05-23 17:17:43.069[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Mapped to ResourceHttpRequestHandler [URL [file:/Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/]]
[2m2025-05-23 17:17:43.183[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-5][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:17:48.656[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m POST "/api/ship/texture-mapping", parameters={}
[2m2025-05-23 17:17:48.657[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36ms.w.s.m.m.a.RequestMappingHandlerMapping[0;39m [2m:[0;39m Mapped to com.shipmodel.controller.ShipModelController#processTextureMapping(TextureMappingRequest)
[2m2025-05-23 17:17:48.666[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mm.m.a.RequestResponseBodyMethodProcessor[0;39m [2m:[0;39m Read "application/json;charset=UTF-8" to [TextureMappingRequest{shipModel='/model/02_chuizhi.ply', textureDate=[/texture/20250522/top.jpg, /te (truncated)...]
[2m2025-05-23 17:17:48.666[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 接收到纹理贴图请求: TextureMappingRequest{shipModel='/model/02_chuizhi.ply', textureDate=[/texture/20250522/top.jpg, /texture/20250522/side.jpg]}
[2m2025-05-23 17:17:48.667[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 处理纹理贴图请求: 模型路径=/model/02_chuizhi.ply, 纹理路径数量=2
[2m2025-05-23 17:17:48.667[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 使用完整路径执行纹理贴图: 模型=/model/02_chuizhi.ply, 纹理=[/texture/20250522/top.jpg, /texture/20250522/side.jpg]
[2m2025-05-23 17:17:48.667[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 从路径提取的信息: 模型名称=02_chuizhi, 纹理日期=20250522
[2m2025-05-23 17:17:48.669[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 将生成的输出文件: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171748.glb
[2m2025-05-23 17:17:48.670[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 处理的文件路径:
[2m2025-05-23 17:17:48.670[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 模型路径: http://192.168.1.110:8099/model/02_chuizhi.ply
[2m2025-05-23 17:17:48.670[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 顶视图路径: http://192.168.1.110:8099/texture/20250522/top.jpg
[2m2025-05-23 17:17:48.670[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 侧视图路径: http://192.168.1.110:8099/texture/20250522/side.jpg
[2m2025-05-23 17:17:48.670[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 执行Blender命令: [/Applications/Blender.app/Contents/MacOS/Blender, --background, --python, /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T//blender_script_eaa8cbad-41f1-4c08-8433-707f85f869d2.py, --, http://192.168.1.110:8099/model/02_chuizhi.ply, http://192.168.1.110:8099/texture/20250522/top.jpg, http://192.168.1.110:8099/texture/20250522/side.jpg, /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171748.glb]
[2m2025-05-23 17:17:49.538[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m POST "/api/ship/texture-mapping", parameters={}
[2m2025-05-23 17:17:49.539[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36ms.w.s.m.m.a.RequestMappingHandlerMapping[0;39m [2m:[0;39m Mapped to com.shipmodel.controller.ShipModelController#processTextureMapping(TextureMappingRequest)
[2m2025-05-23 17:17:49.540[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mm.m.a.RequestResponseBodyMethodProcessor[0;39m [2m:[0;39m Read "application/json;charset=UTF-8" to [TextureMappingRequest{shipModel='/model/02_chuizhi.ply', textureDate=[/texture/20250522/top.jpg, /te (truncated)...]
[2m2025-05-23 17:17:49.541[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 接收到纹理贴图请求: TextureMappingRequest{shipModel='/model/02_chuizhi.ply', textureDate=[/texture/20250522/top.jpg, /texture/20250522/side.jpg]}
[2m2025-05-23 17:17:49.541[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 处理纹理贴图请求: 模型路径=/model/02_chuizhi.ply, 纹理路径数量=2
[2m2025-05-23 17:17:49.541[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 使用完整路径执行纹理贴图: 模型=/model/02_chuizhi.ply, 纹理=[/texture/20250522/top.jpg, /texture/20250522/side.jpg]
[2m2025-05-23 17:17:49.541[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 从路径提取的信息: 模型名称=02_chuizhi, 纹理日期=20250522
[2m2025-05-23 17:17:49.544[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 将生成的输出文件: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171749.glb
[2m2025-05-23 17:17:49.544[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 处理的文件路径:
[2m2025-05-23 17:17:49.544[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 模型路径: http://192.168.1.110:8099/model/02_chuizhi.ply
[2m2025-05-23 17:17:49.544[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 顶视图路径: http://192.168.1.110:8099/texture/20250522/top.jpg
[2m2025-05-23 17:17:49.544[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 侧视图路径: http://192.168.1.110:8099/texture/20250522/side.jpg
[2m2025-05-23 17:17:49.545[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 执行Blender命令: [/Applications/Blender.app/Contents/MacOS/Blender, --background, --python, /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T//blender_script_379c15eb-1f79-440e-9418-ba5b55f6817f.py, --, http://192.168.1.110:8099/model/02_chuizhi.ply, http://192.168.1.110:8099/texture/20250522/top.jpg, http://192.168.1.110:8099/texture/20250522/side.jpg, /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171749.glb]
[2m2025-05-23 17:17:50.304[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始执行无界面Blender脚本...
[2m2025-05-23 17:17:50.304[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用模型路径: http://192.168.1.110:8099/model/02_chuizhi.ply
[2m2025-05-23 17:17:50.304[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用顶视图纹理: http://192.168.1.110:8099/texture/20250522/top.jpg
[2m2025-05-23 17:17:50.304[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用侧视图纹理: http://192.168.1.110:8099/texture/20250522/side.jpg
[2m2025-05-23 17:17:50.304[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 输出路径: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171748.glb
[2m2025-05-23 17:17:50.307[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/model/02_chuizhi.ply 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:17:50.414[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:17:50.417[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在清除默认对象...
[2m2025-05-23 17:17:50.418[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在导入PLY文件: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:17:50.790[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已保存模型 02_chuizhi 的原始变换属性
[2m2025-05-23 17:17:50.791[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 清理临时模型文件: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:17:50.794[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建材质: Material_Top
[2m2025-05-23 17:17:50.794[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建材质: Material_Side
[2m2025-05-23 17:17:50.794[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始预先创建所有相机...
[2m2025-05-23 17:17:50.795[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建相机: Camera_Top
[2m2025-05-23 17:17:50.796[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建相机: Camera_Side
[2m2025-05-23 17:17:50.796[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始处理相机配置 1/2: Camera_Top
[2m2025-05-23 17:17:50.797[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已将模型旋转到相机 Camera_Top 对应的角度
[2m2025-05-23 17:17:51.212[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始执行无界面Blender脚本...
[2m2025-05-23 17:17:51.212[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用模型路径: http://192.168.1.110:8099/model/02_chuizhi.ply
[2m2025-05-23 17:17:51.212[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用顶视图纹理: http://192.168.1.110:8099/texture/20250522/top.jpg
[2m2025-05-23 17:17:51.212[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 使用侧视图纹理: http://192.168.1.110:8099/texture/20250522/side.jpg
[2m2025-05-23 17:17:51.212[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 输出路径: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171749.glb
[2m2025-05-23 17:17:51.218[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/model/02_chuizhi.ply 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:17:51.342[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:17:51.342[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在清除默认对象...
[2m2025-05-23 17:17:51.343[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在导入PLY文件: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:17:51.857[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已保存模型 02_chuizhi 的原始变换属性
[2m2025-05-23 17:17:51.857[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 清理临时模型文件: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/02_chuizhi.ply
[2m2025-05-23 17:17:51.859[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建材质: Material_Top
[2m2025-05-23 17:17:51.859[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建材质: Material_Side
[2m2025-05-23 17:17:51.859[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始预先创建所有相机...
[2m2025-05-23 17:17:51.860[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建相机: Camera_Top
[2m2025-05-23 17:17:51.860[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已创建相机: Camera_Side
[2m2025-05-23 17:17:51.860[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始处理相机配置 1/2: Camera_Top
[2m2025-05-23 17:17:51.861[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已将模型旋转到相机 Camera_Top 对应的角度
[2m2025-05-23 17:17:52.247[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已为相机 Camera_Top 选择了 27604 个面
[2m2025-05-23 17:17:52.250[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 基于透视相机 Camera_Top 参数计算UV投影
[2m2025-05-23 17:17:52.333[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机类型: 透视
[2m2025-05-23 17:17:52.334[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机位置: <Vector (0.0000, 0.0000, 16.0000)>
[2m2025-05-23 17:17:52.334[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 焦距: 50.0mm, 视野: 39.6°, 宽高比: 1.50
[2m2025-05-23 17:17:52.614[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] UV投影计算完成
[2m2025-05-23 17:17:52.616[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/texture/20250522/top.jpg 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/top.jpg
[2m2025-05-23 17:17:52.626[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/top.jpg
[2m2025-05-23 17:17:52.626[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已应用纹理 http://192.168.1.110:8099/texture/20250522/top.jpg 到材质 Material_Top
[2m2025-05-23 17:17:52.710[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已恢复模型到原始角度，准备处理下一个相机
[2m2025-05-23 17:17:52.710[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始处理相机配置 2/2: Camera_Side
[2m2025-05-23 17:17:52.711[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已将模型旋转到相机 Camera_Side 对应的角度
[2m2025-05-23 17:17:52.840[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已为相机 Camera_Top 选择了 27604 个面
[2m2025-05-23 17:17:52.843[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 基于透视相机 Camera_Top 参数计算UV投影
[2m2025-05-23 17:17:52.946[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机类型: 透视
[2m2025-05-23 17:17:52.947[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机位置: <Vector (0.0000, 0.0000, 16.0000)>
[2m2025-05-23 17:17:52.947[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 焦距: 50.0mm, 视野: 39.6°, 宽高比: 1.50
[2m2025-05-23 17:17:53.198[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] UV投影计算完成
[2m2025-05-23 17:17:53.201[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/texture/20250522/top.jpg 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/top.jpg
[2m2025-05-23 17:17:53.209[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/top.jpg
[2m2025-05-23 17:17:53.210[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已应用纹理 http://192.168.1.110:8099/texture/20250522/top.jpg 到材质 Material_Top
[2m2025-05-23 17:17:53.292[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已恢复模型到原始角度，准备处理下一个相机
[2m2025-05-23 17:17:53.292[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始处理相机配置 2/2: Camera_Side
[2m2025-05-23 17:17:53.294[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已将模型旋转到相机 Camera_Side 对应的角度
[2m2025-05-23 17:17:53.784[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已为相机 Camera_Side 选择了 34405 个面
[2m2025-05-23 17:17:53.795[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 基于透视相机 Camera_Side 参数计算UV投影
[2m2025-05-23 17:17:53.816[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机类型: 透视
[2m2025-05-23 17:17:53.816[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机位置: <Vector (14.0000, 0.0000, 1.3000)>
[2m2025-05-23 17:17:53.817[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 焦距: 50.0mm, 视野: 39.6°, 宽高比: 1.50
[2m2025-05-23 17:17:54.262[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] UV投影计算完成
[2m2025-05-23 17:17:54.264[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/texture/20250522/side.jpg 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/side.jpg
[2m2025-05-23 17:17:54.278[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/side.jpg
[2m2025-05-23 17:17:54.279[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已应用纹理 http://192.168.1.110:8099/texture/20250522/side.jpg 到材质 Material_Side
[2m2025-05-23 17:17:54.361[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 所有相机处理完成，已将模型恢复到原始状态
[2m2025-05-23 17:17:54.362[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在保存模型到: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171748.glb
[2m2025-05-23 17:17:54.362[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 模型信息: 名称=02_chuizhi, 顶点数=253192, 多边形数=168261
[2m2025-05-23 17:17:54.362[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 材质数量: 2
[2m2025-05-23 17:17:54.362[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始GLB导出...
[2m2025-05-23 17:17:54.696[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已为相机 Camera_Side 选择了 34405 个面
[2m2025-05-23 17:17:54.700[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 基于透视相机 Camera_Side 参数计算UV投影
[2m2025-05-23 17:17:54.713[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机类型: 透视
[2m2025-05-23 17:17:54.713[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 相机位置: <Vector (14.0000, 0.0000, 1.3000)>
[2m2025-05-23 17:17:54.714[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 焦距: 50.0mm, 视野: 39.6°, 宽高比: 1.50
[2m2025-05-23 17:17:54.857[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: INFO Draco mesh compression is available, use library at /Applications/Blender.app/Contents/Resources/4.4/scripts/addons_core/io_scene_gltf2/libextern_draco.dylib
[2m2025-05-23 17:17:54.857[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:17:54 | INFO: Starting glTF 2.0 export
[2m2025-05-23 17:17:54.857[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Starting glTF 2.0 export
[2m2025-05-23 17:17:54.998[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:17:54 | INFO: Extracting primitive: 02_chuizhi
[2m2025-05-23 17:17:54.998[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Extracting primitive: 02_chuizhi
[2m2025-05-23 17:17:55.004[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] UV投影计算完成
[2m2025-05-23 17:17:55.006[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 从URL下载文件: http://192.168.1.110:8099/texture/20250522/side.jpg 到 /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/side.jpg
[2m2025-05-23 17:17:55.017[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 文件下载成功: /var/folders/ff/3plvxqbx4mn4_hljkx9fbljm0000gn/T/side.jpg
[2m2025-05-23 17:17:55.018[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 已应用纹理 http://192.168.1.110:8099/texture/20250522/side.jpg 到材质 Material_Side
[2m2025-05-23 17:17:55.089[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 所有相机处理完成，已将模型恢复到原始状态
[2m2025-05-23 17:17:55.089[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 正在保存模型到: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171749.glb
[2m2025-05-23 17:17:55.090[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 模型信息: 名称=02_chuizhi, 顶点数=253192, 多边形数=168261
[2m2025-05-23 17:17:55.090[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 材质数量: 2
[2m2025-05-23 17:17:55.090[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 开始GLB导出...
[2m2025-05-23 17:17:55.116[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:17:55 | WARNING: The active Vertex Color will not be exported, as it is not used in the node tree of the material
[2m2025-05-23 17:17:55.116[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] The active Vertex Color will not be exported, as it is not used in the node tree of the material
[2m2025-05-23 17:17:55.421[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: INFO Draco mesh compression is available, use library at /Applications/Blender.app/Contents/Resources/4.4/scripts/addons_core/io_scene_gltf2/libextern_draco.dylib
[2m2025-05-23 17:17:55.421[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:17:55 | INFO: Starting glTF 2.0 export
[2m2025-05-23 17:17:55.421[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Starting glTF 2.0 export
[2m2025-05-23 17:17:55.450[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:17:55 | INFO: Primitives created: 2
[2m2025-05-23 17:17:55.451[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Primitives created: 2
[2m2025-05-23 17:17:55.546[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:17:55 | INFO: Finished glTF 2.0 export in 0.6851499080657959 s
[2m2025-05-23 17:17:55.547[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Finished glTF 2.0 export in 0.6851499080657959 s
[2m2025-05-23 17:17:55.547[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 模型已成功保存: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171748.glb, 文件大小: 17073508字节
[2m2025-05-23 17:17:55.547[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 脚本执行完成!
[2m2025-05-23 17:17:55.604[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 
[2m2025-05-23 17:17:55.613[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:17:55 | INFO: Extracting primitive: 02_chuizhi
[2m2025-05-23 17:17:55.613[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Extracting primitive: 02_chuizhi
[2m2025-05-23 17:17:55.732[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:17:55 | WARNING: The active Vertex Color will not be exported, as it is not used in the node tree of the material
[2m2025-05-23 17:17:55.732[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] The active Vertex Color will not be exported, as it is not used in the node tree of the material
[2m2025-05-23 17:17:55.860[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: Blender 4.4.0 (hash 05377985c527 built 2025-03-18 01:31:05)
[2m2025-05-23 17:17:55.860[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: PLY import of '02_chuizhi.ply' took 370.26 ms
[2m2025-05-23 17:17:55.878[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 
[2m2025-05-23 17:17:55.879[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: Blender quit
[2m2025-05-23 17:17:55.913[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender进程退出，状态码: 0
[2m2025-05-23 17:17:55.914[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 成功生成模型文件: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171748.glb，文件大小: 17073508 字节
[2m2025-05-23 17:17:55.914[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 纹理贴图完成: 02_chuizhi_20250522_20250523_171748.glb
[2m2025-05-23 17:17:55.918[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mo.s.w.s.m.m.a.HttpEntityMethodProcessor [0;39m [2m:[0;39m Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2m2025-05-23 17:17:55.920[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mo.s.w.s.m.m.a.HttpEntityMethodProcessor [0;39m [2m:[0;39m Writing [com.shipmodel.dto.TextureMappingResponse@6e17e757]
[2m2025-05-23 17:17:55.921[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-7][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:17:55.931[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m HEAD "/models/02_chuizhi_20250522_20250523_171748.glb?t=1747991875923", parameters={masked}
[2m2025-05-23 17:17:55.941[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Mapped to ResourceHttpRequestHandler [URL [file:/Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/]]
[2m2025-05-23 17:17:55.961[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:17:55.963[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m GET "/models/02_chuizhi_20250522_20250523_171748.glb?t=1747991875923", parameters={masked}
[2m2025-05-23 17:17:55.969[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Mapped to ResourceHttpRequestHandler [URL [file:/Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/]]
[2m2025-05-23 17:17:56.183[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-9][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:17:56.576[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:17:56 | INFO: Primitives created: 2
[2m2025-05-23 17:17:56.576[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Primitives created: 2
[2m2025-05-23 17:17:56.655[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 17:17:56 | INFO: Finished glTF 2.0 export in 1.2340061664581299 s
[2m2025-05-23 17:17:56.655[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] Finished glTF 2.0 export in 1.2340061664581299 s
[2m2025-05-23 17:17:56.655[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 模型已成功保存: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171749.glb, 文件大小: 17073508字节
[2m2025-05-23 17:17:56.656[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: [执行日志] 脚本执行完成!
[2m2025-05-23 17:17:56.696[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 
[2m2025-05-23 17:17:57.037[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: Blender 4.4.0 (hash 05377985c527 built 2025-03-18 01:31:05)
[2m2025-05-23 17:17:57.038[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: PLY import of '02_chuizhi.ply' took 512.36 ms
[2m2025-05-23 17:17:57.050[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: 
[2m2025-05-23 17:17:57.050[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender输出: Blender quit
[2m2025-05-23 17:17:57.079[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m Blender进程退出，状态码: 0
[2m2025-05-23 17:17:57.081[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.service.impl.BlenderServiceImpl     [0;39m [2m:[0;39m 成功生成模型文件: /Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/02_chuizhi_20250522_20250523_171749.glb，文件大小: 17073508 字节
[2m2025-05-23 17:17:57.081[0;39m [32m INFO[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mc.s.controller.ShipModelController      [0;39m [2m:[0;39m 纹理贴图完成: 02_chuizhi_20250522_20250523_171749.glb
[2m2025-05-23 17:17:57.082[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mo.s.w.s.m.m.a.HttpEntityMethodProcessor [0;39m [2m:[0;39m Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
[2m2025-05-23 17:17:57.082[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mo.s.w.s.m.m.a.HttpEntityMethodProcessor [0;39m [2m:[0;39m Writing [com.shipmodel.dto.TextureMappingResponse@18ff5634]
[2m2025-05-23 17:17:57.084[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:17:57.107[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m HEAD "/models/02_chuizhi_20250522_20250523_171749.glb?t=1747991877086", parameters={masked}
[2m2025-05-23 17:17:57.109[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Mapped to ResourceHttpRequestHandler [URL [file:/Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/]]
[2m2025-05-23 17:17:57.163[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-23 17:17:57.165[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m GET "/models/02_chuizhi_20250522_20250523_171749.glb?t=1747991877086", parameters={masked}
[2m2025-05-23 17:17:57.167[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Mapped to ResourceHttpRequestHandler [URL [file:/Users/ajax/Desktop/YJS/5_22_test_blender2.1/data/output/]]
[2m2025-05-23 17:17:57.606[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[nio-8080-exec-8][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed 200 OK
[2m2025-05-24 10:38:06.036[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[ionShutdownHook][0;39m [36mo.s.b.a.ApplicationAvailabilityBean     [0;39m [2m:[0;39m Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
[2m2025-05-24 10:38:06.077[0;39m [32mDEBUG[0;39m [35m46835[0;39m [2m---[0;39m [2m[ionShutdownHook][0;39m [36mConfigServletWebServerApplicationContext[0;39m [2m:[0;39m Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@fcd6521, started on Fri May 23 17:04:29 CST 2025
